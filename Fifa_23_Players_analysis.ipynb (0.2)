{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "op2lL99oI84N",
        "zvC4UCFhKak-",
        "Uu79srsBR5Og",
        "oiDppmROkB9Z",
        "9565HP-1SRnR",
        "GX_WW5wK59vc"
      ],
      "mount_file_id": "1M_UqSh9KlpXfsJF7TIctlG__vvwaG0Y-",
      "authorship_tag": "ABX9TyO805FqEIUufrKb6DqhRLoA",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ArthurKruos/Fifa23-players-analisys/blob/main/Fifa_23_Players_analysis.ipynb%20(0.2)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Installing and importing libraries"
      ],
      "metadata": {
        "id": "on6uHFx3IqIG"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gKmRxNsmM2IZ",
        "outputId": "9ca270f1-7ebc-421c-d630-f3f1df8e4771"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.22.4)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2022.7.1)\n",
            "Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.22.4)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n",
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.0.7)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.11.0)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.39.3)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.4)\n",
            "Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.22.4)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (23.1)\n",
            "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (8.4.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.0.9)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install numpy\n",
        "!pip install pandas\n",
        "!pip install matplotlib\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from collections import Counter"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Installing and importing datasets"
      ],
      "metadata": {
        "id": "op2lL99oI84N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/Fifa 23 Players Data.csv\")\n",
        "df.head(10)"
      ],
      "metadata": {
        "id": "u-ij4d-iJFoX",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 575
        },
        "outputId": "f171b829-fdba-46f9-db1b-c4d59f698999"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Known As                     Full Name  Overall  Potential  \\\n",
              "0           L. Messi                  Lionel Messi       91         91   \n",
              "1         K. Benzema                 Karim Benzema       91         91   \n",
              "2     R. Lewandowski            Robert Lewandowski       91         91   \n",
              "3       K. De Bruyne               Kevin De Bruyne       91         91   \n",
              "4          K. Mbappé                 Kylian Mbappé       91         95   \n",
              "5           M. Salah                 Mohamed Salah       90         90   \n",
              "6        T. Courtois              Thibaut Courtois       90         91   \n",
              "7           M. Neuer                  Manuel Neuer       90         90   \n",
              "8  Cristiano Ronaldo  C. Ronaldo dos Santos Aveiro       90         90   \n",
              "9        V. van Dijk               Virgil van Dijk       90         90   \n",
              "\n",
              "   Value(in Euro) Positions Played Best Position  Nationality  \\\n",
              "0        54000000               RW           CAM    Argentina   \n",
              "1        64000000            CF,ST            CF       France   \n",
              "2        84000000               ST            ST       Poland   \n",
              "3       107500000           CM,CAM            CM      Belgium   \n",
              "4       190500000            ST,LW            ST       France   \n",
              "5       115500000               RW            RW        Egypt   \n",
              "6        90000000               GK            GK      Belgium   \n",
              "7        13500000               GK            GK      Germany   \n",
              "8        41000000               ST            ST     Portugal   \n",
              "9        98000000               CB            CB  Netherlands   \n",
              "\n",
              "                                         Image Link  Age  ...  LM Rating  \\\n",
              "0  https://cdn.sofifa.net/players/158/023/23_60.png   35  ...         91   \n",
              "1  https://cdn.sofifa.net/players/165/153/23_60.png   34  ...         89   \n",
              "2  https://cdn.sofifa.net/players/188/545/23_60.png   33  ...         86   \n",
              "3  https://cdn.sofifa.net/players/192/985/23_60.png   31  ...         91   \n",
              "4  https://cdn.sofifa.net/players/231/747/23_60.png   23  ...         92   \n",
              "5  https://cdn.sofifa.net/players/209/331/23_60.png   30  ...         90   \n",
              "6  https://cdn.sofifa.net/players/192/119/23_60.png   30  ...         34   \n",
              "7  https://cdn.sofifa.net/players/167/495/23_60.png   36  ...         47   \n",
              "8  https://cdn.sofifa.net/players/020/801/23_60.png   37  ...         87   \n",
              "9  https://cdn.sofifa.net/players/203/376/23_60.png   30  ...         73   \n",
              "\n",
              "   CM Rating  RM Rating  LWB Rating CDM Rating  RWB Rating  LB Rating  \\\n",
              "0         88         91          67         66          67         62   \n",
              "1         84         89          67         67          67         63   \n",
              "2         83         86          67         69          67         64   \n",
              "3         91         91          82         82          82         78   \n",
              "4         84         92          70         66          70         66   \n",
              "5         85         90          74         71          74         70   \n",
              "6         35         34          32         34          32         32   \n",
              "7         53         47          39         46          39         38   \n",
              "8         81         87          65         62          65         61   \n",
              "9         79         73          83         88          83         85   \n",
              "\n",
              "  CB Rating RB Rating GK Rating  \n",
              "0        53        62        22  \n",
              "1        58        63        21  \n",
              "2        63        64        22  \n",
              "3        72        78        24  \n",
              "4        57        66        21  \n",
              "5        61        70        25  \n",
              "6        32        32        90  \n",
              "7        37        38        90  \n",
              "8        56        61        23  \n",
              "9        90        85        23  \n",
              "\n",
              "[10 rows x 89 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d9a4efd6-0489-40f0-a9b1-074e03ef1bde\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Best Position</th>\n",
              "      <th>Nationality</th>\n",
              "      <th>Image Link</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>LM Rating</th>\n",
              "      <th>CM Rating</th>\n",
              "      <th>RM Rating</th>\n",
              "      <th>LWB Rating</th>\n",
              "      <th>CDM Rating</th>\n",
              "      <th>RWB Rating</th>\n",
              "      <th>LB Rating</th>\n",
              "      <th>CB Rating</th>\n",
              "      <th>RB Rating</th>\n",
              "      <th>GK Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>L. Messi</td>\n",
              "      <td>Lionel Messi</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>54000000</td>\n",
              "      <td>RW</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/158/023/23_60.png</td>\n",
              "      <td>35</td>\n",
              "      <td>...</td>\n",
              "      <td>91</td>\n",
              "      <td>88</td>\n",
              "      <td>91</td>\n",
              "      <td>67</td>\n",
              "      <td>66</td>\n",
              "      <td>67</td>\n",
              "      <td>62</td>\n",
              "      <td>53</td>\n",
              "      <td>62</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>K. Benzema</td>\n",
              "      <td>Karim Benzema</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>64000000</td>\n",
              "      <td>CF,ST</td>\n",
              "      <td>CF</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/165/153/23_60.png</td>\n",
              "      <td>34</td>\n",
              "      <td>...</td>\n",
              "      <td>89</td>\n",
              "      <td>84</td>\n",
              "      <td>89</td>\n",
              "      <td>67</td>\n",
              "      <td>67</td>\n",
              "      <td>67</td>\n",
              "      <td>63</td>\n",
              "      <td>58</td>\n",
              "      <td>63</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>R. Lewandowski</td>\n",
              "      <td>Robert Lewandowski</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>84000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Poland</td>\n",
              "      <td>https://cdn.sofifa.net/players/188/545/23_60.png</td>\n",
              "      <td>33</td>\n",
              "      <td>...</td>\n",
              "      <td>86</td>\n",
              "      <td>83</td>\n",
              "      <td>86</td>\n",
              "      <td>67</td>\n",
              "      <td>69</td>\n",
              "      <td>67</td>\n",
              "      <td>64</td>\n",
              "      <td>63</td>\n",
              "      <td>64</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>K. De Bruyne</td>\n",
              "      <td>Kevin De Bruyne</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>107500000</td>\n",
              "      <td>CM,CAM</td>\n",
              "      <td>CM</td>\n",
              "      <td>Belgium</td>\n",
              "      <td>https://cdn.sofifa.net/players/192/985/23_60.png</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>82</td>\n",
              "      <td>82</td>\n",
              "      <td>82</td>\n",
              "      <td>78</td>\n",
              "      <td>72</td>\n",
              "      <td>78</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>K. Mbappé</td>\n",
              "      <td>Kylian Mbappé</td>\n",
              "      <td>91</td>\n",
              "      <td>95</td>\n",
              "      <td>190500000</td>\n",
              "      <td>ST,LW</td>\n",
              "      <td>ST</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/231/747/23_60.png</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>92</td>\n",
              "      <td>84</td>\n",
              "      <td>92</td>\n",
              "      <td>70</td>\n",
              "      <td>66</td>\n",
              "      <td>70</td>\n",
              "      <td>66</td>\n",
              "      <td>57</td>\n",
              "      <td>66</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>M. Salah</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>115500000</td>\n",
              "      <td>RW</td>\n",
              "      <td>RW</td>\n",
              "      <td>Egypt</td>\n",
              "      <td>https://cdn.sofifa.net/players/209/331/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>90</td>\n",
              "      <td>85</td>\n",
              "      <td>90</td>\n",
              "      <td>74</td>\n",
              "      <td>71</td>\n",
              "      <td>74</td>\n",
              "      <td>70</td>\n",
              "      <td>61</td>\n",
              "      <td>70</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>T. Courtois</td>\n",
              "      <td>Thibaut Courtois</td>\n",
              "      <td>90</td>\n",
              "      <td>91</td>\n",
              "      <td>90000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Belgium</td>\n",
              "      <td>https://cdn.sofifa.net/players/192/119/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>34</td>\n",
              "      <td>35</td>\n",
              "      <td>34</td>\n",
              "      <td>32</td>\n",
              "      <td>34</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>M. Neuer</td>\n",
              "      <td>Manuel Neuer</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>13500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Germany</td>\n",
              "      <td>https://cdn.sofifa.net/players/167/495/23_60.png</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>53</td>\n",
              "      <td>47</td>\n",
              "      <td>39</td>\n",
              "      <td>46</td>\n",
              "      <td>39</td>\n",
              "      <td>38</td>\n",
              "      <td>37</td>\n",
              "      <td>38</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Cristiano Ronaldo</td>\n",
              "      <td>C. Ronaldo dos Santos Aveiro</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>41000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Portugal</td>\n",
              "      <td>https://cdn.sofifa.net/players/020/801/23_60.png</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>87</td>\n",
              "      <td>81</td>\n",
              "      <td>87</td>\n",
              "      <td>65</td>\n",
              "      <td>62</td>\n",
              "      <td>65</td>\n",
              "      <td>61</td>\n",
              "      <td>56</td>\n",
              "      <td>61</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>V. van Dijk</td>\n",
              "      <td>Virgil van Dijk</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>98000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Netherlands</td>\n",
              "      <td>https://cdn.sofifa.net/players/203/376/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>73</td>\n",
              "      <td>79</td>\n",
              "      <td>73</td>\n",
              "      <td>83</td>\n",
              "      <td>88</td>\n",
              "      <td>83</td>\n",
              "      <td>85</td>\n",
              "      <td>90</td>\n",
              "      <td>85</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 89 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9a4efd6-0489-40f0-a9b1-074e03ef1bde')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d9a4efd6-0489-40f0-a9b1-074e03ef1bde button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d9a4efd6-0489-40f0-a9b1-074e03ef1bde');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Extrating basic informations"
      ],
      "metadata": {
        "id": "zvC4UCFhKak-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Kk2ynla24wKN",
        "outputId": "6d8242c9-81c1-40c5-e82d-16293a90150d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 18539 entries, 0 to 18538\n",
            "Data columns (total 89 columns):\n",
            " #   Column                       Non-Null Count  Dtype \n",
            "---  ------                       --------------  ----- \n",
            " 0   Known As                     18539 non-null  object\n",
            " 1   Full Name                    18539 non-null  object\n",
            " 2   Overall                      18539 non-null  int64 \n",
            " 3   Potential                    18539 non-null  int64 \n",
            " 4   Value(in Euro)               18539 non-null  int64 \n",
            " 5   Positions Played             18539 non-null  object\n",
            " 6   Best Position                18539 non-null  object\n",
            " 7   Nationality                  18539 non-null  object\n",
            " 8   Image Link                   18539 non-null  object\n",
            " 9   Age                          18539 non-null  int64 \n",
            " 10  Height(in cm)                18539 non-null  int64 \n",
            " 11  Weight(in kg)                18539 non-null  int64 \n",
            " 12  TotalStats                   18539 non-null  int64 \n",
            " 13  BaseStats                    18539 non-null  int64 \n",
            " 14  Club Name                    18539 non-null  object\n",
            " 15  Wage(in Euro)                18539 non-null  int64 \n",
            " 16  Release Clause               18539 non-null  int64 \n",
            " 17  Club Position                18539 non-null  object\n",
            " 18  Contract Until               18539 non-null  object\n",
            " 19  Club Jersey Number           18539 non-null  object\n",
            " 20  Joined On                    18539 non-null  int64 \n",
            " 21  On Loan                      18539 non-null  object\n",
            " 22  Preferred Foot               18539 non-null  object\n",
            " 23  Weak Foot Rating             18539 non-null  int64 \n",
            " 24  Skill Moves                  18539 non-null  int64 \n",
            " 25  International Reputation     18539 non-null  int64 \n",
            " 26  National Team Name           18539 non-null  object\n",
            " 27  National Team Image Link     18539 non-null  object\n",
            " 28  National Team Position       18539 non-null  object\n",
            " 29  National Team Jersey Number  18539 non-null  object\n",
            " 30  Attacking Work Rate          18539 non-null  object\n",
            " 31  Defensive Work Rate          18539 non-null  object\n",
            " 32  Pace Total                   18539 non-null  int64 \n",
            " 33  Shooting Total               18539 non-null  int64 \n",
            " 34  Passing Total                18539 non-null  int64 \n",
            " 35  Dribbling Total              18539 non-null  int64 \n",
            " 36  Defending Total              18539 non-null  int64 \n",
            " 37  Physicality Total            18539 non-null  int64 \n",
            " 38  Crossing                     18539 non-null  int64 \n",
            " 39  Finishing                    18539 non-null  int64 \n",
            " 40  Heading Accuracy             18539 non-null  int64 \n",
            " 41  Short Passing                18539 non-null  int64 \n",
            " 42  Volleys                      18539 non-null  int64 \n",
            " 43  Dribbling                    18539 non-null  int64 \n",
            " 44  Curve                        18539 non-null  int64 \n",
            " 45  Freekick Accuracy            18539 non-null  int64 \n",
            " 46  LongPassing                  18539 non-null  int64 \n",
            " 47  BallControl                  18539 non-null  int64 \n",
            " 48  Acceleration                 18539 non-null  int64 \n",
            " 49  Sprint Speed                 18539 non-null  int64 \n",
            " 50  Agility                      18539 non-null  int64 \n",
            " 51  Reactions                    18539 non-null  int64 \n",
            " 52  Balance                      18539 non-null  int64 \n",
            " 53  Shot Power                   18539 non-null  int64 \n",
            " 54  Jumping                      18539 non-null  int64 \n",
            " 55  Stamina                      18539 non-null  int64 \n",
            " 56  Strength                     18539 non-null  int64 \n",
            " 57  Long Shots                   18539 non-null  int64 \n",
            " 58  Aggression                   18539 non-null  int64 \n",
            " 59  Interceptions                18539 non-null  int64 \n",
            " 60  Positioning                  18539 non-null  int64 \n",
            " 61  Vision                       18539 non-null  int64 \n",
            " 62  Penalties                    18539 non-null  int64 \n",
            " 63  Composure                    18539 non-null  int64 \n",
            " 64  Marking                      18539 non-null  int64 \n",
            " 65  Standing Tackle              18539 non-null  int64 \n",
            " 66  Sliding Tackle               18539 non-null  int64 \n",
            " 67  Goalkeeper Diving            18539 non-null  int64 \n",
            " 68  Goalkeeper Handling          18539 non-null  int64 \n",
            " 69   GoalkeeperKicking           18539 non-null  int64 \n",
            " 70  Goalkeeper Positioning       18539 non-null  int64 \n",
            " 71  Goalkeeper Reflexes          18539 non-null  int64 \n",
            " 72  ST Rating                    18539 non-null  int64 \n",
            " 73  LW Rating                    18539 non-null  int64 \n",
            " 74  LF Rating                    18539 non-null  int64 \n",
            " 75  CF Rating                    18539 non-null  int64 \n",
            " 76  RF Rating                    18539 non-null  int64 \n",
            " 77  RW Rating                    18539 non-null  int64 \n",
            " 78  CAM Rating                   18539 non-null  int64 \n",
            " 79  LM Rating                    18539 non-null  int64 \n",
            " 80  CM Rating                    18539 non-null  int64 \n",
            " 81  RM Rating                    18539 non-null  int64 \n",
            " 82  LWB Rating                   18539 non-null  int64 \n",
            " 83  CDM Rating                   18539 non-null  int64 \n",
            " 84  RWB Rating                   18539 non-null  int64 \n",
            " 85  LB Rating                    18539 non-null  int64 \n",
            " 86  CB Rating                    18539 non-null  int64 \n",
            " 87  RB Rating                    18539 non-null  int64 \n",
            " 88  GK Rating                    18539 non-null  int64 \n",
            "dtypes: int64(71), object(18)\n",
            "memory usage: 12.6+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Players age**"
      ],
      "metadata": {
        "id": "6fjtZdRPOVbh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_youngest = df.sort_values(by='Age')\n",
        "df_youngest.head(10)\n",
        "\n"
      ],
      "metadata": {
        "id": "-h4H5ESKKkZL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 647
        },
        "outputId": "321ea5a4-1e38-4125-d107-5e9df59e752e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Known As        Full Name  Overall  Potential  Value(in Euro)  \\\n",
              "17956     A. Dithmer  Andreas Dithmer       53         76          275000   \n",
              "18014      J. Ardila      José Ardila       53         73          250000   \n",
              "16084       S. Ngoma      Serge Ngoma       58         82          650000   \n",
              "11481      O. Vargas      Obed Vargas       64         81         1500000   \n",
              "17591  A. Madaliński  Alan Madaliński       54         68          210000   \n",
              "17562     J. Lewicki    Jakub Lewicki       54         73          250000   \n",
              "18459       E. Topcu       Emre Topcu       49         59          100000   \n",
              "17476       D. Benga      Denis Benga       55         73          300000   \n",
              "18447    Du Yuezheng      Yuezheng Du       49         67          120000   \n",
              "16815    K. Wiethaup   Kevin Wiethaup       57         71          375000   \n",
              "\n",
              "      Positions Played Best Position          Nationality  \\\n",
              "17956               GK            GK              Denmark   \n",
              "18014               CM           CAM            Venezuela   \n",
              "16084               RW            RM        United States   \n",
              "11481        CM,CDM,RM           CAM        United States   \n",
              "17591               GK            GK               Poland   \n",
              "17562           LWB,LM           LWB               Poland   \n",
              "18459               CM           CAM  Republic of Ireland   \n",
              "17476               LB            LB              Romania   \n",
              "18447               ST            ST             China PR   \n",
              "16815              CAM           CAM              Germany   \n",
              "\n",
              "                                             Image Link  Age  ...  LM Rating  \\\n",
              "17956  https://cdn.sofifa.net/players/269/573/23_60.png   16  ...         27   \n",
              "18014  https://cdn.sofifa.net/players/268/892/23_60.png   16  ...         57   \n",
              "16084  https://cdn.sofifa.net/players/267/796/23_60.png   16  ...         59   \n",
              "11481  https://cdn.sofifa.net/players/263/701/23_60.png   16  ...         66   \n",
              "17591  https://cdn.sofifa.net/players/270/590/23_60.png   16  ...         19   \n",
              "17562  https://cdn.sofifa.net/players/270/715/23_60.png   16  ...         53   \n",
              "18459  https://cdn.sofifa.net/players/271/072/23_60.png   16  ...         53   \n",
              "17476  https://cdn.sofifa.net/players/271/181/23_60.png   16  ...         50   \n",
              "18447  https://cdn.sofifa.net/players/269/128/23_60.png   16  ...         47   \n",
              "16815  https://cdn.sofifa.net/players/268/652/23_60.png   16  ...         58   \n",
              "\n",
              "       CM Rating  RM Rating  LWB Rating CDM Rating  RWB Rating  LB Rating  \\\n",
              "17956         28         27          24         26          24         23   \n",
              "18014         55         57          51         49          51         50   \n",
              "16084         51         59          52         47          52         51   \n",
              "11481         66         66          63         63          63         62   \n",
              "17591         21         19          20         22          20         20   \n",
              "17562         51         53          54         52          54         53   \n",
              "18459         51         53          49         48          49         49   \n",
              "17476         47         50          55         51          55         55   \n",
              "18447         43         47          36         34          36         34   \n",
              "16815         55         58          51         50          51         50   \n",
              "\n",
              "      CB Rating RB Rating GK Rating  \n",
              "17956        24        23        54  \n",
              "18014        46        50        15  \n",
              "16084        45        51        16  \n",
              "11481        58        62        16  \n",
              "17591        22        20        55  \n",
              "17562        51        53        16  \n",
              "18459        47        49        13  \n",
              "17476        53        55        16  \n",
              "18447        33        34        19  \n",
              "16815        46        50        18  \n",
              "\n",
              "[10 rows x 89 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5ed984f7-abe4-49ca-9b10-f5875ef35536\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Best Position</th>\n",
              "      <th>Nationality</th>\n",
              "      <th>Image Link</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>LM Rating</th>\n",
              "      <th>CM Rating</th>\n",
              "      <th>RM Rating</th>\n",
              "      <th>LWB Rating</th>\n",
              "      <th>CDM Rating</th>\n",
              "      <th>RWB Rating</th>\n",
              "      <th>LB Rating</th>\n",
              "      <th>CB Rating</th>\n",
              "      <th>RB Rating</th>\n",
              "      <th>GK Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>17956</th>\n",
              "      <td>A. Dithmer</td>\n",
              "      <td>Andreas Dithmer</td>\n",
              "      <td>53</td>\n",
              "      <td>76</td>\n",
              "      <td>275000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Denmark</td>\n",
              "      <td>https://cdn.sofifa.net/players/269/573/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>27</td>\n",
              "      <td>28</td>\n",
              "      <td>27</td>\n",
              "      <td>24</td>\n",
              "      <td>26</td>\n",
              "      <td>24</td>\n",
              "      <td>23</td>\n",
              "      <td>24</td>\n",
              "      <td>23</td>\n",
              "      <td>54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18014</th>\n",
              "      <td>J. Ardila</td>\n",
              "      <td>José Ardila</td>\n",
              "      <td>53</td>\n",
              "      <td>73</td>\n",
              "      <td>250000</td>\n",
              "      <td>CM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Venezuela</td>\n",
              "      <td>https://cdn.sofifa.net/players/268/892/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>57</td>\n",
              "      <td>55</td>\n",
              "      <td>57</td>\n",
              "      <td>51</td>\n",
              "      <td>49</td>\n",
              "      <td>51</td>\n",
              "      <td>50</td>\n",
              "      <td>46</td>\n",
              "      <td>50</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16084</th>\n",
              "      <td>S. Ngoma</td>\n",
              "      <td>Serge Ngoma</td>\n",
              "      <td>58</td>\n",
              "      <td>82</td>\n",
              "      <td>650000</td>\n",
              "      <td>RW</td>\n",
              "      <td>RM</td>\n",
              "      <td>United States</td>\n",
              "      <td>https://cdn.sofifa.net/players/267/796/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>59</td>\n",
              "      <td>51</td>\n",
              "      <td>59</td>\n",
              "      <td>52</td>\n",
              "      <td>47</td>\n",
              "      <td>52</td>\n",
              "      <td>51</td>\n",
              "      <td>45</td>\n",
              "      <td>51</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11481</th>\n",
              "      <td>O. Vargas</td>\n",
              "      <td>Obed Vargas</td>\n",
              "      <td>64</td>\n",
              "      <td>81</td>\n",
              "      <td>1500000</td>\n",
              "      <td>CM,CDM,RM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>United States</td>\n",
              "      <td>https://cdn.sofifa.net/players/263/701/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>66</td>\n",
              "      <td>66</td>\n",
              "      <td>66</td>\n",
              "      <td>63</td>\n",
              "      <td>63</td>\n",
              "      <td>63</td>\n",
              "      <td>62</td>\n",
              "      <td>58</td>\n",
              "      <td>62</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17591</th>\n",
              "      <td>A. Madaliński</td>\n",
              "      <td>Alan Madaliński</td>\n",
              "      <td>54</td>\n",
              "      <td>68</td>\n",
              "      <td>210000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Poland</td>\n",
              "      <td>https://cdn.sofifa.net/players/270/590/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>19</td>\n",
              "      <td>21</td>\n",
              "      <td>19</td>\n",
              "      <td>20</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>20</td>\n",
              "      <td>22</td>\n",
              "      <td>20</td>\n",
              "      <td>55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17562</th>\n",
              "      <td>J. Lewicki</td>\n",
              "      <td>Jakub Lewicki</td>\n",
              "      <td>54</td>\n",
              "      <td>73</td>\n",
              "      <td>250000</td>\n",
              "      <td>LWB,LM</td>\n",
              "      <td>LWB</td>\n",
              "      <td>Poland</td>\n",
              "      <td>https://cdn.sofifa.net/players/270/715/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>53</td>\n",
              "      <td>51</td>\n",
              "      <td>53</td>\n",
              "      <td>54</td>\n",
              "      <td>52</td>\n",
              "      <td>54</td>\n",
              "      <td>53</td>\n",
              "      <td>51</td>\n",
              "      <td>53</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18459</th>\n",
              "      <td>E. Topcu</td>\n",
              "      <td>Emre Topcu</td>\n",
              "      <td>49</td>\n",
              "      <td>59</td>\n",
              "      <td>100000</td>\n",
              "      <td>CM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Republic of Ireland</td>\n",
              "      <td>https://cdn.sofifa.net/players/271/072/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>53</td>\n",
              "      <td>51</td>\n",
              "      <td>53</td>\n",
              "      <td>49</td>\n",
              "      <td>48</td>\n",
              "      <td>49</td>\n",
              "      <td>49</td>\n",
              "      <td>47</td>\n",
              "      <td>49</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17476</th>\n",
              "      <td>D. Benga</td>\n",
              "      <td>Denis Benga</td>\n",
              "      <td>55</td>\n",
              "      <td>73</td>\n",
              "      <td>300000</td>\n",
              "      <td>LB</td>\n",
              "      <td>LB</td>\n",
              "      <td>Romania</td>\n",
              "      <td>https://cdn.sofifa.net/players/271/181/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>50</td>\n",
              "      <td>47</td>\n",
              "      <td>50</td>\n",
              "      <td>55</td>\n",
              "      <td>51</td>\n",
              "      <td>55</td>\n",
              "      <td>55</td>\n",
              "      <td>53</td>\n",
              "      <td>55</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18447</th>\n",
              "      <td>Du Yuezheng</td>\n",
              "      <td>Yuezheng Du</td>\n",
              "      <td>49</td>\n",
              "      <td>67</td>\n",
              "      <td>120000</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>China PR</td>\n",
              "      <td>https://cdn.sofifa.net/players/269/128/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>43</td>\n",
              "      <td>47</td>\n",
              "      <td>36</td>\n",
              "      <td>34</td>\n",
              "      <td>36</td>\n",
              "      <td>34</td>\n",
              "      <td>33</td>\n",
              "      <td>34</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16815</th>\n",
              "      <td>K. Wiethaup</td>\n",
              "      <td>Kevin Wiethaup</td>\n",
              "      <td>57</td>\n",
              "      <td>71</td>\n",
              "      <td>375000</td>\n",
              "      <td>CAM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Germany</td>\n",
              "      <td>https://cdn.sofifa.net/players/268/652/23_60.png</td>\n",
              "      <td>16</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>55</td>\n",
              "      <td>58</td>\n",
              "      <td>51</td>\n",
              "      <td>50</td>\n",
              "      <td>51</td>\n",
              "      <td>50</td>\n",
              "      <td>46</td>\n",
              "      <td>50</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 89 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ed984f7-abe4-49ca-9b10-f5875ef35536')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5ed984f7-abe4-49ca-9b10-f5875ef35536 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5ed984f7-abe4-49ca-9b10-f5875ef35536');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_oldest = df.sort_values(by = 'Age', ascending=False)\n",
        "df_oldest.head(10)"
      ],
      "metadata": {
        "id": "0PmCdnRQMX-R",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 630
        },
        "outputId": "83740374-d13d-41b2-dcc7-6e81a7671127"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Known As          Full Name  Overall  Potential  Value(in Euro)  \\\n",
              "592       G. Buffon   Gianluigi Buffon       79         79         1900000   \n",
              "13548      S. Lukić       Stojan Lukić       62         62           45000   \n",
              "3276     S. Torrico  Sebastián Torrico       72         72          250000   \n",
              "15525   J. Szmatuła     Jakub Szmatuła       59         59           25000   \n",
              "10851     M. Galezo      Moisés Galezo       64         64               0   \n",
              "1920        J. Sand          José Sand       74         74               0   \n",
              "7701   N. Penneteau  Nicolas Penneteau       67         67          110000   \n",
              "9824      A. Pomini     Alberto Pomini       65         65           80000   \n",
              "4499      G. Pegolo    Gianluca Pegolo       70         70          180000   \n",
              "4551       S. Silva     Santiago Silva       70         70               0   \n",
              "\n",
              "      Positions Played Best Position             Nationality  \\\n",
              "592                 GK            GK                   Italy   \n",
              "13548               GK            GK  Bosnia and Herzegovina   \n",
              "3276                GK            GK               Argentina   \n",
              "15525               GK            GK                  Poland   \n",
              "10851               CB            CB               Venezuela   \n",
              "1920                ST            ST               Argentina   \n",
              "7701                GK            GK                  France   \n",
              "9824                GK            GK                   Italy   \n",
              "4499                GK            GK                   Italy   \n",
              "4551                ST            ST                 Uruguay   \n",
              "\n",
              "                                             Image Link  Age  ...  LM Rating  \\\n",
              "592    https://cdn.sofifa.net/players/001/179/23_60.png   44  ...         34   \n",
              "13548  https://cdn.sofifa.net/players/213/483/23_60.png   42  ...         26   \n",
              "3276   https://cdn.sofifa.net/players/216/692/23_60.png   42  ...         29   \n",
              "15525  https://cdn.sofifa.net/players/155/422/23_60.png   41  ...         24   \n",
              "10851  https://cdn.sofifa.net/players/265/721/23_60.png   41  ...         52   \n",
              "1920   https://cdn.sofifa.net/players/152/912/23_60.png   41  ...         67   \n",
              "7701   https://cdn.sofifa.net/players/018/122/23_60.png   41  ...         26   \n",
              "9824   https://cdn.sofifa.net/players/188/017/23_60.png   41  ...         28   \n",
              "4499   https://cdn.sofifa.net/players/106/795/23_60.png   41  ...         29   \n",
              "4551   https://cdn.sofifa.net/players/139/799/23_60.png   41  ...         62   \n",
              "\n",
              "       CM Rating  RM Rating  LWB Rating CDM Rating  RWB Rating  LB Rating  \\\n",
              "592           38         34          30         35          30         29   \n",
              "13548         31         26          25         30          25         24   \n",
              "3276          29         29          28         28          28         27   \n",
              "15525         26         24          22         26          22         22   \n",
              "10851         56         52          60         64          60         61   \n",
              "1920          65         67          50         54          50         48   \n",
              "7701          30         26          26         30          26         25   \n",
              "9824          29         28          27         30          27         26   \n",
              "4499          29         29          27         29          27         27   \n",
              "4551          65         62          51         57          51         49   \n",
              "\n",
              "      CB Rating RB Rating GK Rating  \n",
              "592          31        29        79  \n",
              "13548        29        24        62  \n",
              "3276         29        27        72  \n",
              "15525        28        22        59  \n",
              "10851        64        61        17  \n",
              "1920         53        48        22  \n",
              "7701         29        25        67  \n",
              "9824         30        26        65  \n",
              "4499         27        27        70  \n",
              "4551         57        49        20  \n",
              "\n",
              "[10 rows x 89 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-16c9e22c-7090-4c39-943c-91641983e901\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Best Position</th>\n",
              "      <th>Nationality</th>\n",
              "      <th>Image Link</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>LM Rating</th>\n",
              "      <th>CM Rating</th>\n",
              "      <th>RM Rating</th>\n",
              "      <th>LWB Rating</th>\n",
              "      <th>CDM Rating</th>\n",
              "      <th>RWB Rating</th>\n",
              "      <th>LB Rating</th>\n",
              "      <th>CB Rating</th>\n",
              "      <th>RB Rating</th>\n",
              "      <th>GK Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>592</th>\n",
              "      <td>G. Buffon</td>\n",
              "      <td>Gianluigi Buffon</td>\n",
              "      <td>79</td>\n",
              "      <td>79</td>\n",
              "      <td>1900000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Italy</td>\n",
              "      <td>https://cdn.sofifa.net/players/001/179/23_60.png</td>\n",
              "      <td>44</td>\n",
              "      <td>...</td>\n",
              "      <td>34</td>\n",
              "      <td>38</td>\n",
              "      <td>34</td>\n",
              "      <td>30</td>\n",
              "      <td>35</td>\n",
              "      <td>30</td>\n",
              "      <td>29</td>\n",
              "      <td>31</td>\n",
              "      <td>29</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13548</th>\n",
              "      <td>S. Lukić</td>\n",
              "      <td>Stojan Lukić</td>\n",
              "      <td>62</td>\n",
              "      <td>62</td>\n",
              "      <td>45000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Bosnia and Herzegovina</td>\n",
              "      <td>https://cdn.sofifa.net/players/213/483/23_60.png</td>\n",
              "      <td>42</td>\n",
              "      <td>...</td>\n",
              "      <td>26</td>\n",
              "      <td>31</td>\n",
              "      <td>26</td>\n",
              "      <td>25</td>\n",
              "      <td>30</td>\n",
              "      <td>25</td>\n",
              "      <td>24</td>\n",
              "      <td>29</td>\n",
              "      <td>24</td>\n",
              "      <td>62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3276</th>\n",
              "      <td>S. Torrico</td>\n",
              "      <td>Sebastián Torrico</td>\n",
              "      <td>72</td>\n",
              "      <td>72</td>\n",
              "      <td>250000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/216/692/23_60.png</td>\n",
              "      <td>42</td>\n",
              "      <td>...</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>28</td>\n",
              "      <td>28</td>\n",
              "      <td>28</td>\n",
              "      <td>27</td>\n",
              "      <td>29</td>\n",
              "      <td>27</td>\n",
              "      <td>72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15525</th>\n",
              "      <td>J. Szmatuła</td>\n",
              "      <td>Jakub Szmatuła</td>\n",
              "      <td>59</td>\n",
              "      <td>59</td>\n",
              "      <td>25000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Poland</td>\n",
              "      <td>https://cdn.sofifa.net/players/155/422/23_60.png</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>24</td>\n",
              "      <td>26</td>\n",
              "      <td>24</td>\n",
              "      <td>22</td>\n",
              "      <td>26</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>28</td>\n",
              "      <td>22</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10851</th>\n",
              "      <td>M. Galezo</td>\n",
              "      <td>Moisés Galezo</td>\n",
              "      <td>64</td>\n",
              "      <td>64</td>\n",
              "      <td>0</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Venezuela</td>\n",
              "      <td>https://cdn.sofifa.net/players/265/721/23_60.png</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>52</td>\n",
              "      <td>56</td>\n",
              "      <td>52</td>\n",
              "      <td>60</td>\n",
              "      <td>64</td>\n",
              "      <td>60</td>\n",
              "      <td>61</td>\n",
              "      <td>64</td>\n",
              "      <td>61</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1920</th>\n",
              "      <td>J. Sand</td>\n",
              "      <td>José Sand</td>\n",
              "      <td>74</td>\n",
              "      <td>74</td>\n",
              "      <td>0</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/152/912/23_60.png</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>67</td>\n",
              "      <td>65</td>\n",
              "      <td>67</td>\n",
              "      <td>50</td>\n",
              "      <td>54</td>\n",
              "      <td>50</td>\n",
              "      <td>48</td>\n",
              "      <td>53</td>\n",
              "      <td>48</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7701</th>\n",
              "      <td>N. Penneteau</td>\n",
              "      <td>Nicolas Penneteau</td>\n",
              "      <td>67</td>\n",
              "      <td>67</td>\n",
              "      <td>110000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/018/122/23_60.png</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>26</td>\n",
              "      <td>30</td>\n",
              "      <td>26</td>\n",
              "      <td>26</td>\n",
              "      <td>30</td>\n",
              "      <td>26</td>\n",
              "      <td>25</td>\n",
              "      <td>29</td>\n",
              "      <td>25</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9824</th>\n",
              "      <td>A. Pomini</td>\n",
              "      <td>Alberto Pomini</td>\n",
              "      <td>65</td>\n",
              "      <td>65</td>\n",
              "      <td>80000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Italy</td>\n",
              "      <td>https://cdn.sofifa.net/players/188/017/23_60.png</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>28</td>\n",
              "      <td>29</td>\n",
              "      <td>28</td>\n",
              "      <td>27</td>\n",
              "      <td>30</td>\n",
              "      <td>27</td>\n",
              "      <td>26</td>\n",
              "      <td>30</td>\n",
              "      <td>26</td>\n",
              "      <td>65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4499</th>\n",
              "      <td>G. Pegolo</td>\n",
              "      <td>Gianluca Pegolo</td>\n",
              "      <td>70</td>\n",
              "      <td>70</td>\n",
              "      <td>180000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Italy</td>\n",
              "      <td>https://cdn.sofifa.net/players/106/795/23_60.png</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>29</td>\n",
              "      <td>27</td>\n",
              "      <td>29</td>\n",
              "      <td>27</td>\n",
              "      <td>27</td>\n",
              "      <td>27</td>\n",
              "      <td>27</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4551</th>\n",
              "      <td>S. Silva</td>\n",
              "      <td>Santiago Silva</td>\n",
              "      <td>70</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Uruguay</td>\n",
              "      <td>https://cdn.sofifa.net/players/139/799/23_60.png</td>\n",
              "      <td>41</td>\n",
              "      <td>...</td>\n",
              "      <td>62</td>\n",
              "      <td>65</td>\n",
              "      <td>62</td>\n",
              "      <td>51</td>\n",
              "      <td>57</td>\n",
              "      <td>51</td>\n",
              "      <td>49</td>\n",
              "      <td>57</td>\n",
              "      <td>49</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 89 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16c9e22c-7090-4c39-943c-91641983e901')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-16c9e22c-7090-4c39-943c-91641983e901 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-16c9e22c-7090-4c39-943c-91641983e901');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Players overall**"
      ],
      "metadata": {
        "id": "d_qCpAhoN_8T"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_overall = df.sort_values(by = 'Overall', ascending = False)\n",
        "df_overall.head(10)"
      ],
      "metadata": {
        "id": "NNuP7mLqMyBo",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 647
        },
        "outputId": "7c663fc0-3314-4139-e16c-5ba316cedd9e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Known As                     Full Name  Overall  Potential  \\\n",
              "0           L. Messi                  Lionel Messi       91         91   \n",
              "2     R. Lewandowski            Robert Lewandowski       91         91   \n",
              "3       K. De Bruyne               Kevin De Bruyne       91         91   \n",
              "4          K. Mbappé                 Kylian Mbappé       91         95   \n",
              "1         K. Benzema                 Karim Benzema       91         91   \n",
              "5           M. Salah                 Mohamed Salah       90         90   \n",
              "6        T. Courtois              Thibaut Courtois       90         91   \n",
              "7           M. Neuer                  Manuel Neuer       90         90   \n",
              "8  Cristiano Ronaldo  C. Ronaldo dos Santos Aveiro       90         90   \n",
              "9        V. van Dijk               Virgil van Dijk       90         90   \n",
              "\n",
              "   Value(in Euro) Positions Played Best Position  Nationality  \\\n",
              "0        54000000               RW           CAM    Argentina   \n",
              "2        84000000               ST            ST       Poland   \n",
              "3       107500000           CM,CAM            CM      Belgium   \n",
              "4       190500000            ST,LW            ST       France   \n",
              "1        64000000            CF,ST            CF       France   \n",
              "5       115500000               RW            RW        Egypt   \n",
              "6        90000000               GK            GK      Belgium   \n",
              "7        13500000               GK            GK      Germany   \n",
              "8        41000000               ST            ST     Portugal   \n",
              "9        98000000               CB            CB  Netherlands   \n",
              "\n",
              "                                         Image Link  Age  ...  LM Rating  \\\n",
              "0  https://cdn.sofifa.net/players/158/023/23_60.png   35  ...         91   \n",
              "2  https://cdn.sofifa.net/players/188/545/23_60.png   33  ...         86   \n",
              "3  https://cdn.sofifa.net/players/192/985/23_60.png   31  ...         91   \n",
              "4  https://cdn.sofifa.net/players/231/747/23_60.png   23  ...         92   \n",
              "1  https://cdn.sofifa.net/players/165/153/23_60.png   34  ...         89   \n",
              "5  https://cdn.sofifa.net/players/209/331/23_60.png   30  ...         90   \n",
              "6  https://cdn.sofifa.net/players/192/119/23_60.png   30  ...         34   \n",
              "7  https://cdn.sofifa.net/players/167/495/23_60.png   36  ...         47   \n",
              "8  https://cdn.sofifa.net/players/020/801/23_60.png   37  ...         87   \n",
              "9  https://cdn.sofifa.net/players/203/376/23_60.png   30  ...         73   \n",
              "\n",
              "   CM Rating  RM Rating  LWB Rating CDM Rating  RWB Rating  LB Rating  \\\n",
              "0         88         91          67         66          67         62   \n",
              "2         83         86          67         69          67         64   \n",
              "3         91         91          82         82          82         78   \n",
              "4         84         92          70         66          70         66   \n",
              "1         84         89          67         67          67         63   \n",
              "5         85         90          74         71          74         70   \n",
              "6         35         34          32         34          32         32   \n",
              "7         53         47          39         46          39         38   \n",
              "8         81         87          65         62          65         61   \n",
              "9         79         73          83         88          83         85   \n",
              "\n",
              "  CB Rating RB Rating GK Rating  \n",
              "0        53        62        22  \n",
              "2        63        64        22  \n",
              "3        72        78        24  \n",
              "4        57        66        21  \n",
              "1        58        63        21  \n",
              "5        61        70        25  \n",
              "6        32        32        90  \n",
              "7        37        38        90  \n",
              "8        56        61        23  \n",
              "9        90        85        23  \n",
              "\n",
              "[10 rows x 89 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c7fb1fef-b4e0-437c-8f02-dcb60826af08\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Best Position</th>\n",
              "      <th>Nationality</th>\n",
              "      <th>Image Link</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>LM Rating</th>\n",
              "      <th>CM Rating</th>\n",
              "      <th>RM Rating</th>\n",
              "      <th>LWB Rating</th>\n",
              "      <th>CDM Rating</th>\n",
              "      <th>RWB Rating</th>\n",
              "      <th>LB Rating</th>\n",
              "      <th>CB Rating</th>\n",
              "      <th>RB Rating</th>\n",
              "      <th>GK Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>L. Messi</td>\n",
              "      <td>Lionel Messi</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>54000000</td>\n",
              "      <td>RW</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/158/023/23_60.png</td>\n",
              "      <td>35</td>\n",
              "      <td>...</td>\n",
              "      <td>91</td>\n",
              "      <td>88</td>\n",
              "      <td>91</td>\n",
              "      <td>67</td>\n",
              "      <td>66</td>\n",
              "      <td>67</td>\n",
              "      <td>62</td>\n",
              "      <td>53</td>\n",
              "      <td>62</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>R. Lewandowski</td>\n",
              "      <td>Robert Lewandowski</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>84000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Poland</td>\n",
              "      <td>https://cdn.sofifa.net/players/188/545/23_60.png</td>\n",
              "      <td>33</td>\n",
              "      <td>...</td>\n",
              "      <td>86</td>\n",
              "      <td>83</td>\n",
              "      <td>86</td>\n",
              "      <td>67</td>\n",
              "      <td>69</td>\n",
              "      <td>67</td>\n",
              "      <td>64</td>\n",
              "      <td>63</td>\n",
              "      <td>64</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>K. De Bruyne</td>\n",
              "      <td>Kevin De Bruyne</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>107500000</td>\n",
              "      <td>CM,CAM</td>\n",
              "      <td>CM</td>\n",
              "      <td>Belgium</td>\n",
              "      <td>https://cdn.sofifa.net/players/192/985/23_60.png</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>82</td>\n",
              "      <td>82</td>\n",
              "      <td>82</td>\n",
              "      <td>78</td>\n",
              "      <td>72</td>\n",
              "      <td>78</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>K. Mbappé</td>\n",
              "      <td>Kylian Mbappé</td>\n",
              "      <td>91</td>\n",
              "      <td>95</td>\n",
              "      <td>190500000</td>\n",
              "      <td>ST,LW</td>\n",
              "      <td>ST</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/231/747/23_60.png</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>92</td>\n",
              "      <td>84</td>\n",
              "      <td>92</td>\n",
              "      <td>70</td>\n",
              "      <td>66</td>\n",
              "      <td>70</td>\n",
              "      <td>66</td>\n",
              "      <td>57</td>\n",
              "      <td>66</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>K. Benzema</td>\n",
              "      <td>Karim Benzema</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>64000000</td>\n",
              "      <td>CF,ST</td>\n",
              "      <td>CF</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/165/153/23_60.png</td>\n",
              "      <td>34</td>\n",
              "      <td>...</td>\n",
              "      <td>89</td>\n",
              "      <td>84</td>\n",
              "      <td>89</td>\n",
              "      <td>67</td>\n",
              "      <td>67</td>\n",
              "      <td>67</td>\n",
              "      <td>63</td>\n",
              "      <td>58</td>\n",
              "      <td>63</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>M. Salah</td>\n",
              "      <td>Mohamed Salah</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>115500000</td>\n",
              "      <td>RW</td>\n",
              "      <td>RW</td>\n",
              "      <td>Egypt</td>\n",
              "      <td>https://cdn.sofifa.net/players/209/331/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>90</td>\n",
              "      <td>85</td>\n",
              "      <td>90</td>\n",
              "      <td>74</td>\n",
              "      <td>71</td>\n",
              "      <td>74</td>\n",
              "      <td>70</td>\n",
              "      <td>61</td>\n",
              "      <td>70</td>\n",
              "      <td>25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>T. Courtois</td>\n",
              "      <td>Thibaut Courtois</td>\n",
              "      <td>90</td>\n",
              "      <td>91</td>\n",
              "      <td>90000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Belgium</td>\n",
              "      <td>https://cdn.sofifa.net/players/192/119/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>34</td>\n",
              "      <td>35</td>\n",
              "      <td>34</td>\n",
              "      <td>32</td>\n",
              "      <td>34</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>M. Neuer</td>\n",
              "      <td>Manuel Neuer</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>13500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Germany</td>\n",
              "      <td>https://cdn.sofifa.net/players/167/495/23_60.png</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>53</td>\n",
              "      <td>47</td>\n",
              "      <td>39</td>\n",
              "      <td>46</td>\n",
              "      <td>39</td>\n",
              "      <td>38</td>\n",
              "      <td>37</td>\n",
              "      <td>38</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Cristiano Ronaldo</td>\n",
              "      <td>C. Ronaldo dos Santos Aveiro</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>41000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Portugal</td>\n",
              "      <td>https://cdn.sofifa.net/players/020/801/23_60.png</td>\n",
              "      <td>37</td>\n",
              "      <td>...</td>\n",
              "      <td>87</td>\n",
              "      <td>81</td>\n",
              "      <td>87</td>\n",
              "      <td>65</td>\n",
              "      <td>62</td>\n",
              "      <td>65</td>\n",
              "      <td>61</td>\n",
              "      <td>56</td>\n",
              "      <td>61</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>V. van Dijk</td>\n",
              "      <td>Virgil van Dijk</td>\n",
              "      <td>90</td>\n",
              "      <td>90</td>\n",
              "      <td>98000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Netherlands</td>\n",
              "      <td>https://cdn.sofifa.net/players/203/376/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>73</td>\n",
              "      <td>79</td>\n",
              "      <td>73</td>\n",
              "      <td>83</td>\n",
              "      <td>88</td>\n",
              "      <td>83</td>\n",
              "      <td>85</td>\n",
              "      <td>90</td>\n",
              "      <td>85</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 89 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7fb1fef-b4e0-437c-8f02-dcb60826af08')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c7fb1fef-b4e0-437c-8f02-dcb60826af08 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c7fb1fef-b4e0-437c-8f02-dcb60826af08');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_worstpl = df.sort_values(by = \"Overall\", ascending = True)\n",
        "df_worstpl.head(10)"
      ],
      "metadata": {
        "id": "e_xGZP-DNpkU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 630
        },
        "outputId": "da155096-6014-4bb4-b037-8f30e593c90e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Known As           Full Name  Overall  Potential  Value(in Euro)  \\\n",
              "18538        N. Rabha         Nabin Rabha       47         50           60000   \n",
              "18533       Pi Ziyang           Ziyang Pi       47         60          110000   \n",
              "18534      D. Collins      Darren Collins       47         56          110000   \n",
              "18537    D. McCallion    Daithí McCallion       47         61          100000   \n",
              "18536       L. Mullan         Liam Mullan       47         67          130000   \n",
              "18535    Yang Dejiang        Dejiang Yang       47         57           90000   \n",
              "18511     Chen Yunhua         Yunhua Chen       48         56          100000   \n",
              "18510  A. Lalroutsang  Alfred Lalroutsang       48         61          110000   \n",
              "18509    S. Fernandes    Sweden Fernandes       48         57          110000   \n",
              "18508       L. Jongte  Lalbiakhlua Jongte       48         60          100000   \n",
              "\n",
              "      Positions Played Best Position          Nationality  \\\n",
              "18538               LB            LB                India   \n",
              "18533               CM           CAM             China PR   \n",
              "18534            ST,RM           CAM  Republic of Ireland   \n",
              "18537               CB            CB  Republic of Ireland   \n",
              "18536               CM            RM     Northern Ireland   \n",
              "18535              CDM           CDM             China PR   \n",
              "18511               CM           CAM             China PR   \n",
              "18510           RM,CAM            RM                India   \n",
              "18509            RW,LW            LM                India   \n",
              "18508               GK            GK                India   \n",
              "\n",
              "                                             Image Link  Age  ...  LM Rating  \\\n",
              "18538  https://cdn.sofifa.net/players/261/424/23_60.png   25  ...         44   \n",
              "18533  https://cdn.sofifa.net/players/269/066/23_60.png   19  ...         50   \n",
              "18534  https://cdn.sofifa.net/players/243/725/23_60.png   21  ...         50   \n",
              "18537  https://cdn.sofifa.net/players/267/824/23_60.png   17  ...         33   \n",
              "18536  https://cdn.sofifa.net/players/267/823/23_60.png   18  ...         52   \n",
              "18535  https://cdn.sofifa.net/players/261/933/23_60.png   17  ...         45   \n",
              "18511  https://cdn.sofifa.net/players/261/963/23_60.png   22  ...         50   \n",
              "18510  https://cdn.sofifa.net/players/256/083/23_60.png   19  ...         49   \n",
              "18509  https://cdn.sofifa.net/players/258/803/23_60.png   22  ...         49   \n",
              "18508  https://cdn.sofifa.net/players/259/313/23_60.png   19  ...         21   \n",
              "\n",
              "       CM Rating  RM Rating  LWB Rating CDM Rating  RWB Rating  LB Rating  \\\n",
              "18538         40         44          46         43          46         47   \n",
              "18533         49         50          47         48          47         47   \n",
              "18534         44         50          41         38          41         40   \n",
              "18537         33         33          44         42          44         47   \n",
              "18536         49         52          46         44          46         46   \n",
              "18535         45         45          47         48          47         49   \n",
              "18511         50         50          46         47          46         46   \n",
              "18510         42         49          41         36          41         40   \n",
              "18509         42         49          39         35          39         37   \n",
              "18508         24         21          20         24          20         19   \n",
              "\n",
              "      CB Rating RB Rating GK Rating  \n",
              "18538        47        47        19  \n",
              "18533        46        47        18  \n",
              "18534        36        40        15  \n",
              "18537        49        47        15  \n",
              "18536        42        46        17  \n",
              "18535        49        49        15  \n",
              "18511        45        46        16  \n",
              "18510        34        40        17  \n",
              "18509        32        37        15  \n",
              "18508        22        19        49  \n",
              "\n",
              "[10 rows x 89 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b9601cb1-aaa7-48ca-a057-1c22576ab1e3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Best Position</th>\n",
              "      <th>Nationality</th>\n",
              "      <th>Image Link</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>LM Rating</th>\n",
              "      <th>CM Rating</th>\n",
              "      <th>RM Rating</th>\n",
              "      <th>LWB Rating</th>\n",
              "      <th>CDM Rating</th>\n",
              "      <th>RWB Rating</th>\n",
              "      <th>LB Rating</th>\n",
              "      <th>CB Rating</th>\n",
              "      <th>RB Rating</th>\n",
              "      <th>GK Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>18538</th>\n",
              "      <td>N. Rabha</td>\n",
              "      <td>Nabin Rabha</td>\n",
              "      <td>47</td>\n",
              "      <td>50</td>\n",
              "      <td>60000</td>\n",
              "      <td>LB</td>\n",
              "      <td>LB</td>\n",
              "      <td>India</td>\n",
              "      <td>https://cdn.sofifa.net/players/261/424/23_60.png</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>44</td>\n",
              "      <td>40</td>\n",
              "      <td>44</td>\n",
              "      <td>46</td>\n",
              "      <td>43</td>\n",
              "      <td>46</td>\n",
              "      <td>47</td>\n",
              "      <td>47</td>\n",
              "      <td>47</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18533</th>\n",
              "      <td>Pi Ziyang</td>\n",
              "      <td>Ziyang Pi</td>\n",
              "      <td>47</td>\n",
              "      <td>60</td>\n",
              "      <td>110000</td>\n",
              "      <td>CM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>China PR</td>\n",
              "      <td>https://cdn.sofifa.net/players/269/066/23_60.png</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>50</td>\n",
              "      <td>49</td>\n",
              "      <td>50</td>\n",
              "      <td>47</td>\n",
              "      <td>48</td>\n",
              "      <td>47</td>\n",
              "      <td>47</td>\n",
              "      <td>46</td>\n",
              "      <td>47</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18534</th>\n",
              "      <td>D. Collins</td>\n",
              "      <td>Darren Collins</td>\n",
              "      <td>47</td>\n",
              "      <td>56</td>\n",
              "      <td>110000</td>\n",
              "      <td>ST,RM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Republic of Ireland</td>\n",
              "      <td>https://cdn.sofifa.net/players/243/725/23_60.png</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>50</td>\n",
              "      <td>44</td>\n",
              "      <td>50</td>\n",
              "      <td>41</td>\n",
              "      <td>38</td>\n",
              "      <td>41</td>\n",
              "      <td>40</td>\n",
              "      <td>36</td>\n",
              "      <td>40</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18537</th>\n",
              "      <td>D. McCallion</td>\n",
              "      <td>Daithí McCallion</td>\n",
              "      <td>47</td>\n",
              "      <td>61</td>\n",
              "      <td>100000</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Republic of Ireland</td>\n",
              "      <td>https://cdn.sofifa.net/players/267/824/23_60.png</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>33</td>\n",
              "      <td>33</td>\n",
              "      <td>33</td>\n",
              "      <td>44</td>\n",
              "      <td>42</td>\n",
              "      <td>44</td>\n",
              "      <td>47</td>\n",
              "      <td>49</td>\n",
              "      <td>47</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18536</th>\n",
              "      <td>L. Mullan</td>\n",
              "      <td>Liam Mullan</td>\n",
              "      <td>47</td>\n",
              "      <td>67</td>\n",
              "      <td>130000</td>\n",
              "      <td>CM</td>\n",
              "      <td>RM</td>\n",
              "      <td>Northern Ireland</td>\n",
              "      <td>https://cdn.sofifa.net/players/267/823/23_60.png</td>\n",
              "      <td>18</td>\n",
              "      <td>...</td>\n",
              "      <td>52</td>\n",
              "      <td>49</td>\n",
              "      <td>52</td>\n",
              "      <td>46</td>\n",
              "      <td>44</td>\n",
              "      <td>46</td>\n",
              "      <td>46</td>\n",
              "      <td>42</td>\n",
              "      <td>46</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18535</th>\n",
              "      <td>Yang Dejiang</td>\n",
              "      <td>Dejiang Yang</td>\n",
              "      <td>47</td>\n",
              "      <td>57</td>\n",
              "      <td>90000</td>\n",
              "      <td>CDM</td>\n",
              "      <td>CDM</td>\n",
              "      <td>China PR</td>\n",
              "      <td>https://cdn.sofifa.net/players/261/933/23_60.png</td>\n",
              "      <td>17</td>\n",
              "      <td>...</td>\n",
              "      <td>45</td>\n",
              "      <td>45</td>\n",
              "      <td>45</td>\n",
              "      <td>47</td>\n",
              "      <td>48</td>\n",
              "      <td>47</td>\n",
              "      <td>49</td>\n",
              "      <td>49</td>\n",
              "      <td>49</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18511</th>\n",
              "      <td>Chen Yunhua</td>\n",
              "      <td>Yunhua Chen</td>\n",
              "      <td>48</td>\n",
              "      <td>56</td>\n",
              "      <td>100000</td>\n",
              "      <td>CM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>China PR</td>\n",
              "      <td>https://cdn.sofifa.net/players/261/963/23_60.png</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>50</td>\n",
              "      <td>50</td>\n",
              "      <td>50</td>\n",
              "      <td>46</td>\n",
              "      <td>47</td>\n",
              "      <td>46</td>\n",
              "      <td>46</td>\n",
              "      <td>45</td>\n",
              "      <td>46</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18510</th>\n",
              "      <td>A. Lalroutsang</td>\n",
              "      <td>Alfred Lalroutsang</td>\n",
              "      <td>48</td>\n",
              "      <td>61</td>\n",
              "      <td>110000</td>\n",
              "      <td>RM,CAM</td>\n",
              "      <td>RM</td>\n",
              "      <td>India</td>\n",
              "      <td>https://cdn.sofifa.net/players/256/083/23_60.png</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>49</td>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "      <td>41</td>\n",
              "      <td>36</td>\n",
              "      <td>41</td>\n",
              "      <td>40</td>\n",
              "      <td>34</td>\n",
              "      <td>40</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18509</th>\n",
              "      <td>S. Fernandes</td>\n",
              "      <td>Sweden Fernandes</td>\n",
              "      <td>48</td>\n",
              "      <td>57</td>\n",
              "      <td>110000</td>\n",
              "      <td>RW,LW</td>\n",
              "      <td>LM</td>\n",
              "      <td>India</td>\n",
              "      <td>https://cdn.sofifa.net/players/258/803/23_60.png</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>49</td>\n",
              "      <td>42</td>\n",
              "      <td>49</td>\n",
              "      <td>39</td>\n",
              "      <td>35</td>\n",
              "      <td>39</td>\n",
              "      <td>37</td>\n",
              "      <td>32</td>\n",
              "      <td>37</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18508</th>\n",
              "      <td>L. Jongte</td>\n",
              "      <td>Lalbiakhlua Jongte</td>\n",
              "      <td>48</td>\n",
              "      <td>60</td>\n",
              "      <td>100000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>India</td>\n",
              "      <td>https://cdn.sofifa.net/players/259/313/23_60.png</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>21</td>\n",
              "      <td>24</td>\n",
              "      <td>21</td>\n",
              "      <td>20</td>\n",
              "      <td>24</td>\n",
              "      <td>20</td>\n",
              "      <td>19</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 89 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9601cb1-aaa7-48ca-a057-1c22576ab1e3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b9601cb1-aaa7-48ca-a057-1c22576ab1e3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b9601cb1-aaa7-48ca-a057-1c22576ab1e3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Best potential players**"
      ],
      "metadata": {
        "id": "KvqD-zNZOnRq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_potential = df.sort_values(by = \"Potential\", ascending = False)\n",
        "df_potential.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 665
        },
        "id": "-yIAYMRJNS8k",
        "outputId": "08754ab2-a4f8-443a-bfe8-6c807f29b159"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Known As                         Full Name  Overall  Potential  \\\n",
              "4       K. Mbappé                     Kylian Mbappé       91         95   \n",
              "21     E. Haaland                    Erling Haaland       88         94   \n",
              "82          Pedri              Pedro González López       85         93   \n",
              "83       P. Foden                        Phil Foden       85         92   \n",
              "63   Vinícius Jr.  Vinícius José de Oliveira Júnior       86         92   \n",
              "42     F. de Jong                   Frenkie de Jong       87         92   \n",
              "22  G. Donnarumma              Gianluigi Donnarumma       88         92   \n",
              "0        L. Messi                      Lionel Messi       91         91   \n",
              "16        Ederson         Ederson Santana de Moraes       89         91   \n",
              "1      K. Benzema                     Karim Benzema       91         91   \n",
              "\n",
              "    Value(in Euro) Positions Played Best Position  Nationality  \\\n",
              "4        190500000            ST,LW            ST       France   \n",
              "21       148000000               ST            ST       Norway   \n",
              "82       116000000               CM            CM        Spain   \n",
              "83       109500000        LW,CF,CAM           CAM      England   \n",
              "63       109000000               LW            LW       Brazil   \n",
              "42       116500000               CM            CM  Netherlands   \n",
              "22       103500000               GK            GK        Italy   \n",
              "0         54000000               RW           CAM    Argentina   \n",
              "16        88000000               GK            GK       Brazil   \n",
              "1         64000000            CF,ST            CF       France   \n",
              "\n",
              "                                          Image Link  Age  ...  LM Rating  \\\n",
              "4   https://cdn.sofifa.net/players/231/747/23_60.png   23  ...         92   \n",
              "21  https://cdn.sofifa.net/players/239/085/23_60.png   21  ...         80   \n",
              "82  https://cdn.sofifa.net/players/251/854/23_60.png   19  ...         84   \n",
              "83  https://cdn.sofifa.net/players/237/692/23_60.png   22  ...         87   \n",
              "63  https://cdn.sofifa.net/players/238/794/23_60.png   21  ...         86   \n",
              "42  https://cdn.sofifa.net/players/228/702/23_60.png   25  ...         88   \n",
              "22  https://cdn.sofifa.net/players/230/621/23_60.png   23  ...         38   \n",
              "0   https://cdn.sofifa.net/players/158/023/23_60.png   35  ...         91   \n",
              "16  https://cdn.sofifa.net/players/210/257/23_60.png   28  ...         47   \n",
              "1   https://cdn.sofifa.net/players/165/153/23_60.png   34  ...         89   \n",
              "\n",
              "    CM Rating  RM Rating  LWB Rating CDM Rating  RWB Rating  LB Rating  \\\n",
              "4          84         92          70         66          70         66   \n",
              "21         76         80          65         67          65         64   \n",
              "82         86         84          79         80          79         77   \n",
              "83         85         87          75         74          75         72   \n",
              "63         77         86          63         58          63         58   \n",
              "42         89         88          86         87          86         85   \n",
              "22         40         38          34         37          34         34   \n",
              "0          88         91          67         66          67         62   \n",
              "16         52         47          40         47          40         39   \n",
              "1          84         89          67         67          67         63   \n",
              "\n",
              "   CB Rating RB Rating GK Rating  \n",
              "4         57        66        21  \n",
              "21        65        64        22  \n",
              "82        72        77        19  \n",
              "83        62        72        22  \n",
              "63        47        58        17  \n",
              "42        81        85        21  \n",
              "22        34        34        89  \n",
              "0         53        62        22  \n",
              "16        38        39        90  \n",
              "1         58        63        21  \n",
              "\n",
              "[10 rows x 89 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4583395a-0e3f-400f-92ae-dc64c4870750\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Best Position</th>\n",
              "      <th>Nationality</th>\n",
              "      <th>Image Link</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>LM Rating</th>\n",
              "      <th>CM Rating</th>\n",
              "      <th>RM Rating</th>\n",
              "      <th>LWB Rating</th>\n",
              "      <th>CDM Rating</th>\n",
              "      <th>RWB Rating</th>\n",
              "      <th>LB Rating</th>\n",
              "      <th>CB Rating</th>\n",
              "      <th>RB Rating</th>\n",
              "      <th>GK Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>K. Mbappé</td>\n",
              "      <td>Kylian Mbappé</td>\n",
              "      <td>91</td>\n",
              "      <td>95</td>\n",
              "      <td>190500000</td>\n",
              "      <td>ST,LW</td>\n",
              "      <td>ST</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/231/747/23_60.png</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>92</td>\n",
              "      <td>84</td>\n",
              "      <td>92</td>\n",
              "      <td>70</td>\n",
              "      <td>66</td>\n",
              "      <td>70</td>\n",
              "      <td>66</td>\n",
              "      <td>57</td>\n",
              "      <td>66</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>E. Haaland</td>\n",
              "      <td>Erling Haaland</td>\n",
              "      <td>88</td>\n",
              "      <td>94</td>\n",
              "      <td>148000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Norway</td>\n",
              "      <td>https://cdn.sofifa.net/players/239/085/23_60.png</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>80</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>65</td>\n",
              "      <td>67</td>\n",
              "      <td>65</td>\n",
              "      <td>64</td>\n",
              "      <td>65</td>\n",
              "      <td>64</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Pedri</td>\n",
              "      <td>Pedro González López</td>\n",
              "      <td>85</td>\n",
              "      <td>93</td>\n",
              "      <td>116000000</td>\n",
              "      <td>CM</td>\n",
              "      <td>CM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/251/854/23_60.png</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>84</td>\n",
              "      <td>86</td>\n",
              "      <td>84</td>\n",
              "      <td>79</td>\n",
              "      <td>80</td>\n",
              "      <td>79</td>\n",
              "      <td>77</td>\n",
              "      <td>72</td>\n",
              "      <td>77</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>P. Foden</td>\n",
              "      <td>Phil Foden</td>\n",
              "      <td>85</td>\n",
              "      <td>92</td>\n",
              "      <td>109500000</td>\n",
              "      <td>LW,CF,CAM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>England</td>\n",
              "      <td>https://cdn.sofifa.net/players/237/692/23_60.png</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>87</td>\n",
              "      <td>85</td>\n",
              "      <td>87</td>\n",
              "      <td>75</td>\n",
              "      <td>74</td>\n",
              "      <td>75</td>\n",
              "      <td>72</td>\n",
              "      <td>62</td>\n",
              "      <td>72</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Vinícius Jr.</td>\n",
              "      <td>Vinícius José de Oliveira Júnior</td>\n",
              "      <td>86</td>\n",
              "      <td>92</td>\n",
              "      <td>109000000</td>\n",
              "      <td>LW</td>\n",
              "      <td>LW</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>https://cdn.sofifa.net/players/238/794/23_60.png</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>86</td>\n",
              "      <td>77</td>\n",
              "      <td>86</td>\n",
              "      <td>63</td>\n",
              "      <td>58</td>\n",
              "      <td>63</td>\n",
              "      <td>58</td>\n",
              "      <td>47</td>\n",
              "      <td>58</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>F. de Jong</td>\n",
              "      <td>Frenkie de Jong</td>\n",
              "      <td>87</td>\n",
              "      <td>92</td>\n",
              "      <td>116500000</td>\n",
              "      <td>CM</td>\n",
              "      <td>CM</td>\n",
              "      <td>Netherlands</td>\n",
              "      <td>https://cdn.sofifa.net/players/228/702/23_60.png</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>88</td>\n",
              "      <td>89</td>\n",
              "      <td>88</td>\n",
              "      <td>86</td>\n",
              "      <td>87</td>\n",
              "      <td>86</td>\n",
              "      <td>85</td>\n",
              "      <td>81</td>\n",
              "      <td>85</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>G. Donnarumma</td>\n",
              "      <td>Gianluigi Donnarumma</td>\n",
              "      <td>88</td>\n",
              "      <td>92</td>\n",
              "      <td>103500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Italy</td>\n",
              "      <td>https://cdn.sofifa.net/players/230/621/23_60.png</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>38</td>\n",
              "      <td>40</td>\n",
              "      <td>38</td>\n",
              "      <td>34</td>\n",
              "      <td>37</td>\n",
              "      <td>34</td>\n",
              "      <td>34</td>\n",
              "      <td>34</td>\n",
              "      <td>34</td>\n",
              "      <td>89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>L. Messi</td>\n",
              "      <td>Lionel Messi</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>54000000</td>\n",
              "      <td>RW</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/158/023/23_60.png</td>\n",
              "      <td>35</td>\n",
              "      <td>...</td>\n",
              "      <td>91</td>\n",
              "      <td>88</td>\n",
              "      <td>91</td>\n",
              "      <td>67</td>\n",
              "      <td>66</td>\n",
              "      <td>67</td>\n",
              "      <td>62</td>\n",
              "      <td>53</td>\n",
              "      <td>62</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Ederson</td>\n",
              "      <td>Ederson Santana de Moraes</td>\n",
              "      <td>89</td>\n",
              "      <td>91</td>\n",
              "      <td>88000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Brazil</td>\n",
              "      <td>https://cdn.sofifa.net/players/210/257/23_60.png</td>\n",
              "      <td>28</td>\n",
              "      <td>...</td>\n",
              "      <td>47</td>\n",
              "      <td>52</td>\n",
              "      <td>47</td>\n",
              "      <td>40</td>\n",
              "      <td>47</td>\n",
              "      <td>40</td>\n",
              "      <td>39</td>\n",
              "      <td>38</td>\n",
              "      <td>39</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>K. Benzema</td>\n",
              "      <td>Karim Benzema</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>64000000</td>\n",
              "      <td>CF,ST</td>\n",
              "      <td>CF</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/165/153/23_60.png</td>\n",
              "      <td>34</td>\n",
              "      <td>...</td>\n",
              "      <td>89</td>\n",
              "      <td>84</td>\n",
              "      <td>89</td>\n",
              "      <td>67</td>\n",
              "      <td>67</td>\n",
              "      <td>67</td>\n",
              "      <td>63</td>\n",
              "      <td>58</td>\n",
              "      <td>63</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 89 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4583395a-0e3f-400f-92ae-dc64c4870750')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4583395a-0e3f-400f-92ae-dc64c4870750 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4583395a-0e3f-400f-92ae-dc64c4870750');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_potential_villareal = df.loc[df['Club Name'].str.contains('Villarreal CF')]\n",
        "df_potential_villareal\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Ru1k4GHQUxlT",
        "outputId": "b9d58767-4de1-4a20-eb74-6146f0aba1b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Known As                  Full Name  Overall  Potential  \\\n",
              "54             Parejo        Daniel Parejo Muñoz       86         86   \n",
              "78      Gerard Moreno    Gerard Moreno Balagueró       85         85   \n",
              "172        Pau Torres       Pau Francisco Torres       83         89   \n",
              "199          G. Rulli             Gerónimo Rulli       82         82   \n",
              "234        A. Danjuma             Arnaut Danjuma       82         83   \n",
              "263       Raúl Albiol      Raúl Albiol Tortajada       82         82   \n",
              "340       G. Lo Celso           Giovani Lo Celso       81         83   \n",
              "457         E. Capoue             Etienne Capoue       80         80   \n",
              "461       F. Coquelin           Francis Coquelin       80         80   \n",
              "485           Morales  José Luis Morales Nogales       80         80   \n",
              "516          J. Foyth                 Juan Foyth       79         84   \n",
              "532       Yeremy Pino   Yeremy Jesús Pino Santos       79         87   \n",
              "537      S. Chukwueze           Samuel Chukwueze       79         85   \n",
              "668    Manu Trigueros     Manuel Trigueros Muñoz       79         79   \n",
              "801          A. Mandi                Aïssa Mandi       78         78   \n",
              "840           Pedraza        Alfonso Pedraza Sag       78         80   \n",
              "861         J. Mojica               Johan Mojica       77         77   \n",
              "948        Pepe Reina     José Manuel Reina Páez       77         77   \n",
              "986    Alberto Moreno       Alberto Moreno Pérez       77         77   \n",
              "1783       Álex Baena  Alejandro Baena Rodríguez       75         82   \n",
              "1845       Álex Baena  Alejandro Baena Rodríguez       75         82   \n",
              "1986     Kiko Femenía      Francisco Femenía Far       74         74   \n",
              "2388     Jorge Cuenca       Jorge Cuenca Barreno       73         82   \n",
              "2659    Manu Morlanes      Manuel Morlanes Ariño       73         80   \n",
              "3732       N. Jackson            Nicolas Jackson       71         81   \n",
              "13768    Iker Álvarez     Iker Álvarez de Eulate       62         74   \n",
              "\n",
              "       Value(in Euro) Positions Played Best Position  Nationality  \\\n",
              "54           42000000               CM            CM        Spain   \n",
              "78           53000000               ST            ST        Spain   \n",
              "172          50500000               CB            CB        Spain   \n",
              "199          20500000               GK            GK    Argentina   \n",
              "234          36500000            LM,ST            LM  Netherlands   \n",
              "263           5500000               CB            CB        Spain   \n",
              "340          31500000         CM,ST,LM           CAM    Argentina   \n",
              "457          13000000           CM,CDM            CM       France   \n",
              "461          17500000        CM,LM,CDM            CM       France   \n",
              "485          10000000            LM,ST            LM        Spain   \n",
              "516          24500000        RB,CB,CDM            CB    Argentina   \n",
              "532          38000000            RM,ST           CAM        Spain   \n",
              "537          27500000            RM,RW            LM      Nigeria   \n",
              "668          17000000         CM,LM,RM            CM        Spain   \n",
              "801          11500000               CB            CB      Algeria   \n",
              "840          16000000            LB,LM            LB        Spain   \n",
              "861           9500000        LB,LWB,LM            LB     Colombia   \n",
              "948           1200000               GK            GK        Spain   \n",
              "986           9500000            LB,LM            LB        Spain   \n",
              "1783         11000000         RM,CM,ST           CAM        Spain   \n",
              "1845         11000000         RM,CM,ST           CAM        Spain   \n",
              "1986          3100000            RB,LB            RB        Spain   \n",
              "2388          6500000               CB            CB        Spain   \n",
              "2659          5500000           CDM,CM            CM        Spain   \n",
              "3732          4200000        ST,CAM,LM            ST      Senegal   \n",
              "13768          850000               GK            GK      Andorra   \n",
              "\n",
              "                                             Image Link  Age  ...  LM Rating  \\\n",
              "54     https://cdn.sofifa.net/players/189/513/23_60.png   33  ...         82   \n",
              "78     https://cdn.sofifa.net/players/208/093/23_60.png   30  ...         83   \n",
              "172    https://cdn.sofifa.net/players/241/464/23_60.png   25  ...         69   \n",
              "199    https://cdn.sofifa.net/players/215/316/23_60.png   30  ...         35   \n",
              "234    https://cdn.sofifa.net/players/236/276/23_60.png   25  ...         83   \n",
              "263    https://cdn.sofifa.net/players/157/481/23_60.png   36  ...         58   \n",
              "340    https://cdn.sofifa.net/players/226/226/23_60.png   26  ...         82   \n",
              "457    https://cdn.sofifa.net/players/178/213/23_60.png   33  ...         77   \n",
              "461    https://cdn.sofifa.net/players/189/271/23_60.png   31  ...         79   \n",
              "485    https://cdn.sofifa.net/players/216/475/23_60.png   34  ...         80   \n",
              "516    https://cdn.sofifa.net/players/237/221/23_60.png   24  ...         71   \n",
              "532    https://cdn.sofifa.net/players/259/377/23_60.png   19  ...         80   \n",
              "537    https://cdn.sofifa.net/players/246/172/23_60.png   23  ...         80   \n",
              "668    https://cdn.sofifa.net/players/206/545/23_60.png   30  ...         75   \n",
              "801    https://cdn.sofifa.net/players/201/143/23_60.png   30  ...         70   \n",
              "840    https://cdn.sofifa.net/players/228/302/23_60.png   26  ...         78   \n",
              "861    https://cdn.sofifa.net/players/214/026/23_60.png   29  ...         76   \n",
              "948    https://cdn.sofifa.net/players/024/630/23_60.png   39  ...         34   \n",
              "986    https://cdn.sofifa.net/players/205/566/23_60.png   29  ...         77   \n",
              "1783   https://cdn.sofifa.net/players/257/279/23_60.png   20  ...         76   \n",
              "1845   https://cdn.sofifa.net/players/257/279/23_60.png   20  ...         76   \n",
              "1986   https://cdn.sofifa.net/players/189/860/23_60.png   31  ...         73   \n",
              "2388   https://cdn.sofifa.net/players/237/522/23_60.png   22  ...         55   \n",
              "2659   https://cdn.sofifa.net/players/241/856/23_60.png   23  ...         73   \n",
              "3732   https://cdn.sofifa.net/players/259/197/23_60.png   21  ...         69   \n",
              "13768  https://cdn.sofifa.net/players/269/641/23_60.png   20  ...         27   \n",
              "\n",
              "       CM Rating  RM Rating  LWB Rating CDM Rating  RWB Rating  LB Rating  \\\n",
              "54            86         82          78         81          78         76   \n",
              "78            79         83          67         65          67         65   \n",
              "172           74         69          79         83          79         81   \n",
              "199           36         35          32         34          32         32   \n",
              "234           76         83          67         63          67         64   \n",
              "263           70         58          70         80          70         73   \n",
              "340           83         82          77         79          77         75   \n",
              "457           80         77          78         80          78         77   \n",
              "461           80         79          79         80          79         79   \n",
              "485           76         80          70         67          70         67   \n",
              "516           72         71          78         79          78         79   \n",
              "532           75         80          63         59          63         60   \n",
              "537           71         80          63         57          63         59   \n",
              "668           79         75          74         77          74         73   \n",
              "801           73         70          75         78          75         76   \n",
              "840           75         78          78         76          78         78   \n",
              "861           73         76          77         75          77         77   \n",
              "948           38         34          33         37          33         33   \n",
              "986           75         77          77         75          77         77   \n",
              "1783          74         76          69         69          69         68   \n",
              "1845          74         76          69         69          69         68   \n",
              "1986          72         73          74         73          74         74   \n",
              "2388          63         55          67         72          67         70   \n",
              "2659          75         73          73         74          73         72   \n",
              "3732          64         69          56         55          56         55   \n",
              "13768         30         27          25         27          25         24   \n",
              "\n",
              "      CB Rating RB Rating GK Rating  \n",
              "54           73        76        19  \n",
              "78           60        65        22  \n",
              "172          85        81        21  \n",
              "199          31        32        82  \n",
              "234          55        64        21  \n",
              "263          82        73        19  \n",
              "340          73        75        21  \n",
              "457          80        77        22  \n",
              "461          80        79        20  \n",
              "485          61        67        22  \n",
              "516          80        79        20  \n",
              "532          47        60        17  \n",
              "537          49        59        18  \n",
              "668          73        73        19  \n",
              "801          78        76        22  \n",
              "840          76        78        19  \n",
              "861          74        77        20  \n",
              "948          35        33        77  \n",
              "986          73        77        20  \n",
              "1783         64        68        19  \n",
              "1845         64        68        19  \n",
              "1986         71        74        22  \n",
              "2388         75        70        20  \n",
              "2659         70        72        19  \n",
              "3732         52        55        17  \n",
              "13768        24        24        63  \n",
              "\n",
              "[26 rows x 89 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-123173a9-6ed5-4b73-a187-337e12a8240b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Best Position</th>\n",
              "      <th>Nationality</th>\n",
              "      <th>Image Link</th>\n",
              "      <th>Age</th>\n",
              "      <th>...</th>\n",
              "      <th>LM Rating</th>\n",
              "      <th>CM Rating</th>\n",
              "      <th>RM Rating</th>\n",
              "      <th>LWB Rating</th>\n",
              "      <th>CDM Rating</th>\n",
              "      <th>RWB Rating</th>\n",
              "      <th>LB Rating</th>\n",
              "      <th>CB Rating</th>\n",
              "      <th>RB Rating</th>\n",
              "      <th>GK Rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Parejo</td>\n",
              "      <td>Daniel Parejo Muñoz</td>\n",
              "      <td>86</td>\n",
              "      <td>86</td>\n",
              "      <td>42000000</td>\n",
              "      <td>CM</td>\n",
              "      <td>CM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/189/513/23_60.png</td>\n",
              "      <td>33</td>\n",
              "      <td>...</td>\n",
              "      <td>82</td>\n",
              "      <td>86</td>\n",
              "      <td>82</td>\n",
              "      <td>78</td>\n",
              "      <td>81</td>\n",
              "      <td>78</td>\n",
              "      <td>76</td>\n",
              "      <td>73</td>\n",
              "      <td>76</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Gerard Moreno</td>\n",
              "      <td>Gerard Moreno Balagueró</td>\n",
              "      <td>85</td>\n",
              "      <td>85</td>\n",
              "      <td>53000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>ST</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/208/093/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>83</td>\n",
              "      <td>79</td>\n",
              "      <td>83</td>\n",
              "      <td>67</td>\n",
              "      <td>65</td>\n",
              "      <td>67</td>\n",
              "      <td>65</td>\n",
              "      <td>60</td>\n",
              "      <td>65</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>Pau Torres</td>\n",
              "      <td>Pau Francisco Torres</td>\n",
              "      <td>83</td>\n",
              "      <td>89</td>\n",
              "      <td>50500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/241/464/23_60.png</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>69</td>\n",
              "      <td>74</td>\n",
              "      <td>69</td>\n",
              "      <td>79</td>\n",
              "      <td>83</td>\n",
              "      <td>79</td>\n",
              "      <td>81</td>\n",
              "      <td>85</td>\n",
              "      <td>81</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>199</th>\n",
              "      <td>G. Rulli</td>\n",
              "      <td>Gerónimo Rulli</td>\n",
              "      <td>82</td>\n",
              "      <td>82</td>\n",
              "      <td>20500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/215/316/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>35</td>\n",
              "      <td>36</td>\n",
              "      <td>35</td>\n",
              "      <td>32</td>\n",
              "      <td>34</td>\n",
              "      <td>32</td>\n",
              "      <td>32</td>\n",
              "      <td>31</td>\n",
              "      <td>32</td>\n",
              "      <td>82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>234</th>\n",
              "      <td>A. Danjuma</td>\n",
              "      <td>Arnaut Danjuma</td>\n",
              "      <td>82</td>\n",
              "      <td>83</td>\n",
              "      <td>36500000</td>\n",
              "      <td>LM,ST</td>\n",
              "      <td>LM</td>\n",
              "      <td>Netherlands</td>\n",
              "      <td>https://cdn.sofifa.net/players/236/276/23_60.png</td>\n",
              "      <td>25</td>\n",
              "      <td>...</td>\n",
              "      <td>83</td>\n",
              "      <td>76</td>\n",
              "      <td>83</td>\n",
              "      <td>67</td>\n",
              "      <td>63</td>\n",
              "      <td>67</td>\n",
              "      <td>64</td>\n",
              "      <td>55</td>\n",
              "      <td>64</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>Raúl Albiol</td>\n",
              "      <td>Raúl Albiol Tortajada</td>\n",
              "      <td>82</td>\n",
              "      <td>82</td>\n",
              "      <td>5500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/157/481/23_60.png</td>\n",
              "      <td>36</td>\n",
              "      <td>...</td>\n",
              "      <td>58</td>\n",
              "      <td>70</td>\n",
              "      <td>58</td>\n",
              "      <td>70</td>\n",
              "      <td>80</td>\n",
              "      <td>70</td>\n",
              "      <td>73</td>\n",
              "      <td>82</td>\n",
              "      <td>73</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>340</th>\n",
              "      <td>G. Lo Celso</td>\n",
              "      <td>Giovani Lo Celso</td>\n",
              "      <td>81</td>\n",
              "      <td>83</td>\n",
              "      <td>31500000</td>\n",
              "      <td>CM,ST,LM</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/226/226/23_60.png</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>82</td>\n",
              "      <td>83</td>\n",
              "      <td>82</td>\n",
              "      <td>77</td>\n",
              "      <td>79</td>\n",
              "      <td>77</td>\n",
              "      <td>75</td>\n",
              "      <td>73</td>\n",
              "      <td>75</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>457</th>\n",
              "      <td>E. Capoue</td>\n",
              "      <td>Etienne Capoue</td>\n",
              "      <td>80</td>\n",
              "      <td>80</td>\n",
              "      <td>13000000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>CM</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/178/213/23_60.png</td>\n",
              "      <td>33</td>\n",
              "      <td>...</td>\n",
              "      <td>77</td>\n",
              "      <td>80</td>\n",
              "      <td>77</td>\n",
              "      <td>78</td>\n",
              "      <td>80</td>\n",
              "      <td>78</td>\n",
              "      <td>77</td>\n",
              "      <td>80</td>\n",
              "      <td>77</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>461</th>\n",
              "      <td>F. Coquelin</td>\n",
              "      <td>Francis Coquelin</td>\n",
              "      <td>80</td>\n",
              "      <td>80</td>\n",
              "      <td>17500000</td>\n",
              "      <td>CM,LM,CDM</td>\n",
              "      <td>CM</td>\n",
              "      <td>France</td>\n",
              "      <td>https://cdn.sofifa.net/players/189/271/23_60.png</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>79</td>\n",
              "      <td>80</td>\n",
              "      <td>79</td>\n",
              "      <td>79</td>\n",
              "      <td>80</td>\n",
              "      <td>79</td>\n",
              "      <td>79</td>\n",
              "      <td>80</td>\n",
              "      <td>79</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>485</th>\n",
              "      <td>Morales</td>\n",
              "      <td>José Luis Morales Nogales</td>\n",
              "      <td>80</td>\n",
              "      <td>80</td>\n",
              "      <td>10000000</td>\n",
              "      <td>LM,ST</td>\n",
              "      <td>LM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/216/475/23_60.png</td>\n",
              "      <td>34</td>\n",
              "      <td>...</td>\n",
              "      <td>80</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>70</td>\n",
              "      <td>67</td>\n",
              "      <td>70</td>\n",
              "      <td>67</td>\n",
              "      <td>61</td>\n",
              "      <td>67</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>516</th>\n",
              "      <td>J. Foyth</td>\n",
              "      <td>Juan Foyth</td>\n",
              "      <td>79</td>\n",
              "      <td>84</td>\n",
              "      <td>24500000</td>\n",
              "      <td>RB,CB,CDM</td>\n",
              "      <td>CB</td>\n",
              "      <td>Argentina</td>\n",
              "      <td>https://cdn.sofifa.net/players/237/221/23_60.png</td>\n",
              "      <td>24</td>\n",
              "      <td>...</td>\n",
              "      <td>71</td>\n",
              "      <td>72</td>\n",
              "      <td>71</td>\n",
              "      <td>78</td>\n",
              "      <td>79</td>\n",
              "      <td>78</td>\n",
              "      <td>79</td>\n",
              "      <td>80</td>\n",
              "      <td>79</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>532</th>\n",
              "      <td>Yeremy Pino</td>\n",
              "      <td>Yeremy Jesús Pino Santos</td>\n",
              "      <td>79</td>\n",
              "      <td>87</td>\n",
              "      <td>38000000</td>\n",
              "      <td>RM,ST</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/259/377/23_60.png</td>\n",
              "      <td>19</td>\n",
              "      <td>...</td>\n",
              "      <td>80</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>63</td>\n",
              "      <td>59</td>\n",
              "      <td>63</td>\n",
              "      <td>60</td>\n",
              "      <td>47</td>\n",
              "      <td>60</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>537</th>\n",
              "      <td>S. Chukwueze</td>\n",
              "      <td>Samuel Chukwueze</td>\n",
              "      <td>79</td>\n",
              "      <td>85</td>\n",
              "      <td>27500000</td>\n",
              "      <td>RM,RW</td>\n",
              "      <td>LM</td>\n",
              "      <td>Nigeria</td>\n",
              "      <td>https://cdn.sofifa.net/players/246/172/23_60.png</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>80</td>\n",
              "      <td>71</td>\n",
              "      <td>80</td>\n",
              "      <td>63</td>\n",
              "      <td>57</td>\n",
              "      <td>63</td>\n",
              "      <td>59</td>\n",
              "      <td>49</td>\n",
              "      <td>59</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>668</th>\n",
              "      <td>Manu Trigueros</td>\n",
              "      <td>Manuel Trigueros Muñoz</td>\n",
              "      <td>79</td>\n",
              "      <td>79</td>\n",
              "      <td>17000000</td>\n",
              "      <td>CM,LM,RM</td>\n",
              "      <td>CM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/206/545/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>75</td>\n",
              "      <td>79</td>\n",
              "      <td>75</td>\n",
              "      <td>74</td>\n",
              "      <td>77</td>\n",
              "      <td>74</td>\n",
              "      <td>73</td>\n",
              "      <td>73</td>\n",
              "      <td>73</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>801</th>\n",
              "      <td>A. Mandi</td>\n",
              "      <td>Aïssa Mandi</td>\n",
              "      <td>78</td>\n",
              "      <td>78</td>\n",
              "      <td>11500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Algeria</td>\n",
              "      <td>https://cdn.sofifa.net/players/201/143/23_60.png</td>\n",
              "      <td>30</td>\n",
              "      <td>...</td>\n",
              "      <td>70</td>\n",
              "      <td>73</td>\n",
              "      <td>70</td>\n",
              "      <td>75</td>\n",
              "      <td>78</td>\n",
              "      <td>75</td>\n",
              "      <td>76</td>\n",
              "      <td>78</td>\n",
              "      <td>76</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>840</th>\n",
              "      <td>Pedraza</td>\n",
              "      <td>Alfonso Pedraza Sag</td>\n",
              "      <td>78</td>\n",
              "      <td>80</td>\n",
              "      <td>16000000</td>\n",
              "      <td>LB,LM</td>\n",
              "      <td>LB</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/228/302/23_60.png</td>\n",
              "      <td>26</td>\n",
              "      <td>...</td>\n",
              "      <td>78</td>\n",
              "      <td>75</td>\n",
              "      <td>78</td>\n",
              "      <td>78</td>\n",
              "      <td>76</td>\n",
              "      <td>78</td>\n",
              "      <td>78</td>\n",
              "      <td>76</td>\n",
              "      <td>78</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>861</th>\n",
              "      <td>J. Mojica</td>\n",
              "      <td>Johan Mojica</td>\n",
              "      <td>77</td>\n",
              "      <td>77</td>\n",
              "      <td>9500000</td>\n",
              "      <td>LB,LWB,LM</td>\n",
              "      <td>LB</td>\n",
              "      <td>Colombia</td>\n",
              "      <td>https://cdn.sofifa.net/players/214/026/23_60.png</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>76</td>\n",
              "      <td>73</td>\n",
              "      <td>76</td>\n",
              "      <td>77</td>\n",
              "      <td>75</td>\n",
              "      <td>77</td>\n",
              "      <td>77</td>\n",
              "      <td>74</td>\n",
              "      <td>77</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>948</th>\n",
              "      <td>Pepe Reina</td>\n",
              "      <td>José Manuel Reina Páez</td>\n",
              "      <td>77</td>\n",
              "      <td>77</td>\n",
              "      <td>1200000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/024/630/23_60.png</td>\n",
              "      <td>39</td>\n",
              "      <td>...</td>\n",
              "      <td>34</td>\n",
              "      <td>38</td>\n",
              "      <td>34</td>\n",
              "      <td>33</td>\n",
              "      <td>37</td>\n",
              "      <td>33</td>\n",
              "      <td>33</td>\n",
              "      <td>35</td>\n",
              "      <td>33</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>986</th>\n",
              "      <td>Alberto Moreno</td>\n",
              "      <td>Alberto Moreno Pérez</td>\n",
              "      <td>77</td>\n",
              "      <td>77</td>\n",
              "      <td>9500000</td>\n",
              "      <td>LB,LM</td>\n",
              "      <td>LB</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/205/566/23_60.png</td>\n",
              "      <td>29</td>\n",
              "      <td>...</td>\n",
              "      <td>77</td>\n",
              "      <td>75</td>\n",
              "      <td>77</td>\n",
              "      <td>77</td>\n",
              "      <td>75</td>\n",
              "      <td>77</td>\n",
              "      <td>77</td>\n",
              "      <td>73</td>\n",
              "      <td>77</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1783</th>\n",
              "      <td>Álex Baena</td>\n",
              "      <td>Alejandro Baena Rodríguez</td>\n",
              "      <td>75</td>\n",
              "      <td>82</td>\n",
              "      <td>11000000</td>\n",
              "      <td>RM,CM,ST</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/257/279/23_60.png</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>76</td>\n",
              "      <td>74</td>\n",
              "      <td>76</td>\n",
              "      <td>69</td>\n",
              "      <td>69</td>\n",
              "      <td>69</td>\n",
              "      <td>68</td>\n",
              "      <td>64</td>\n",
              "      <td>68</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1845</th>\n",
              "      <td>Álex Baena</td>\n",
              "      <td>Alejandro Baena Rodríguez</td>\n",
              "      <td>75</td>\n",
              "      <td>82</td>\n",
              "      <td>11000000</td>\n",
              "      <td>RM,CM,ST</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/257/279/23_60.png</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>76</td>\n",
              "      <td>74</td>\n",
              "      <td>76</td>\n",
              "      <td>69</td>\n",
              "      <td>69</td>\n",
              "      <td>69</td>\n",
              "      <td>68</td>\n",
              "      <td>64</td>\n",
              "      <td>68</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1986</th>\n",
              "      <td>Kiko Femenía</td>\n",
              "      <td>Francisco Femenía Far</td>\n",
              "      <td>74</td>\n",
              "      <td>74</td>\n",
              "      <td>3100000</td>\n",
              "      <td>RB,LB</td>\n",
              "      <td>RB</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/189/860/23_60.png</td>\n",
              "      <td>31</td>\n",
              "      <td>...</td>\n",
              "      <td>73</td>\n",
              "      <td>72</td>\n",
              "      <td>73</td>\n",
              "      <td>74</td>\n",
              "      <td>73</td>\n",
              "      <td>74</td>\n",
              "      <td>74</td>\n",
              "      <td>71</td>\n",
              "      <td>74</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2388</th>\n",
              "      <td>Jorge Cuenca</td>\n",
              "      <td>Jorge Cuenca Barreno</td>\n",
              "      <td>73</td>\n",
              "      <td>82</td>\n",
              "      <td>6500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>CB</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/237/522/23_60.png</td>\n",
              "      <td>22</td>\n",
              "      <td>...</td>\n",
              "      <td>55</td>\n",
              "      <td>63</td>\n",
              "      <td>55</td>\n",
              "      <td>67</td>\n",
              "      <td>72</td>\n",
              "      <td>67</td>\n",
              "      <td>70</td>\n",
              "      <td>75</td>\n",
              "      <td>70</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2659</th>\n",
              "      <td>Manu Morlanes</td>\n",
              "      <td>Manuel Morlanes Ariño</td>\n",
              "      <td>73</td>\n",
              "      <td>80</td>\n",
              "      <td>5500000</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>CM</td>\n",
              "      <td>Spain</td>\n",
              "      <td>https://cdn.sofifa.net/players/241/856/23_60.png</td>\n",
              "      <td>23</td>\n",
              "      <td>...</td>\n",
              "      <td>73</td>\n",
              "      <td>75</td>\n",
              "      <td>73</td>\n",
              "      <td>73</td>\n",
              "      <td>74</td>\n",
              "      <td>73</td>\n",
              "      <td>72</td>\n",
              "      <td>70</td>\n",
              "      <td>72</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3732</th>\n",
              "      <td>N. Jackson</td>\n",
              "      <td>Nicolas Jackson</td>\n",
              "      <td>71</td>\n",
              "      <td>81</td>\n",
              "      <td>4200000</td>\n",
              "      <td>ST,CAM,LM</td>\n",
              "      <td>ST</td>\n",
              "      <td>Senegal</td>\n",
              "      <td>https://cdn.sofifa.net/players/259/197/23_60.png</td>\n",
              "      <td>21</td>\n",
              "      <td>...</td>\n",
              "      <td>69</td>\n",
              "      <td>64</td>\n",
              "      <td>69</td>\n",
              "      <td>56</td>\n",
              "      <td>55</td>\n",
              "      <td>56</td>\n",
              "      <td>55</td>\n",
              "      <td>52</td>\n",
              "      <td>55</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13768</th>\n",
              "      <td>Iker Álvarez</td>\n",
              "      <td>Iker Álvarez de Eulate</td>\n",
              "      <td>62</td>\n",
              "      <td>74</td>\n",
              "      <td>850000</td>\n",
              "      <td>GK</td>\n",
              "      <td>GK</td>\n",
              "      <td>Andorra</td>\n",
              "      <td>https://cdn.sofifa.net/players/269/641/23_60.png</td>\n",
              "      <td>20</td>\n",
              "      <td>...</td>\n",
              "      <td>27</td>\n",
              "      <td>30</td>\n",
              "      <td>27</td>\n",
              "      <td>25</td>\n",
              "      <td>27</td>\n",
              "      <td>25</td>\n",
              "      <td>24</td>\n",
              "      <td>24</td>\n",
              "      <td>24</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>26 rows × 89 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-123173a9-6ed5-4b73-a187-337e12a8240b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-123173a9-6ed5-4b73-a187-337e12a8240b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-123173a9-6ed5-4b73-a187-337e12a8240b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Better informations (No value limitation)**"
      ],
      "metadata": {
        "id": "jHsVkoT5Rwjq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Potential young players w/ good potential and price"
      ],
      "metadata": {
        "id": "Uu79srsBR5Og"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Less or equal than 20 years\n",
        "df_players_age = df.loc[df['Age'] <= 20]\n",
        "df_playersag_sorted = df_players_age.sort_values(by='Age')\n",
        "df_potential_young = df_playersag_sorted.loc[df['Potential'] >= 85]\n",
        "df_potential_young_sorted = df_potential_young.sort_values(by = 'Potential', ascending = False)\n",
        "df_potential_young_sorted[['Known As','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]\n",
        "#[['Known As','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]"
      ],
      "metadata": {
        "id": "9uIioRUpR3Jk",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "bd760a0c-2da9-448e-deca-22b631898a5c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Known As  Age  Overall  Potential  Value(in Euro) Positions Played  \\\n",
              "82            Pedri   19       85         93       116000000               CM   \n",
              "225        F. Wirtz   19       82         91        66000000           CAM,CM   \n",
              "124   J. Bellingham   19       84         91        81500000            CM,LM   \n",
              "302      J. Musiala   19       81         90        55500000        CM,LM,CAM   \n",
              "527       Ansu Fati   19       79         90        38000000               LW   \n",
              "...             ...  ...      ...        ...             ...              ...   \n",
              "7168       M. Soulé   19       68         85         3100000               RW   \n",
              "8176      N. Ünüvar   19       67         85         2600000           LW,CAM   \n",
              "8183    E. Anderson   19       67         85         2600000            CM,LW   \n",
              "1310     B. Brobbey   20       76         85        16500000               ST   \n",
              "1646  Nico González   20       75         85        12500000               CM   \n",
              "\n",
              "                Club Name  \n",
              "82           FC Barcelona  \n",
              "225   Bayer 04 Leverkusen  \n",
              "124     Borussia Dortmund  \n",
              "302     FC Bayern München  \n",
              "527          FC Barcelona  \n",
              "...                   ...  \n",
              "7168             Juventus  \n",
              "8176          Trabzonspor  \n",
              "8183     Newcastle United  \n",
              "1310                 Ajax  \n",
              "1646          Valencia CF  \n",
              "\n",
              "[100 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf97befd-4722-4fc2-92e0-69cb2abf3222\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Pedri</td>\n",
              "      <td>19</td>\n",
              "      <td>85</td>\n",
              "      <td>93</td>\n",
              "      <td>116000000</td>\n",
              "      <td>CM</td>\n",
              "      <td>FC Barcelona</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>225</th>\n",
              "      <td>F. Wirtz</td>\n",
              "      <td>19</td>\n",
              "      <td>82</td>\n",
              "      <td>91</td>\n",
              "      <td>66000000</td>\n",
              "      <td>CAM,CM</td>\n",
              "      <td>Bayer 04 Leverkusen</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>124</th>\n",
              "      <td>J. Bellingham</td>\n",
              "      <td>19</td>\n",
              "      <td>84</td>\n",
              "      <td>91</td>\n",
              "      <td>81500000</td>\n",
              "      <td>CM,LM</td>\n",
              "      <td>Borussia Dortmund</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>302</th>\n",
              "      <td>J. Musiala</td>\n",
              "      <td>19</td>\n",
              "      <td>81</td>\n",
              "      <td>90</td>\n",
              "      <td>55500000</td>\n",
              "      <td>CM,LM,CAM</td>\n",
              "      <td>FC Bayern München</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>527</th>\n",
              "      <td>Ansu Fati</td>\n",
              "      <td>19</td>\n",
              "      <td>79</td>\n",
              "      <td>90</td>\n",
              "      <td>38000000</td>\n",
              "      <td>LW</td>\n",
              "      <td>FC Barcelona</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7168</th>\n",
              "      <td>M. Soulé</td>\n",
              "      <td>19</td>\n",
              "      <td>68</td>\n",
              "      <td>85</td>\n",
              "      <td>3100000</td>\n",
              "      <td>RW</td>\n",
              "      <td>Juventus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8176</th>\n",
              "      <td>N. Ünüvar</td>\n",
              "      <td>19</td>\n",
              "      <td>67</td>\n",
              "      <td>85</td>\n",
              "      <td>2600000</td>\n",
              "      <td>LW,CAM</td>\n",
              "      <td>Trabzonspor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8183</th>\n",
              "      <td>E. Anderson</td>\n",
              "      <td>19</td>\n",
              "      <td>67</td>\n",
              "      <td>85</td>\n",
              "      <td>2600000</td>\n",
              "      <td>CM,LW</td>\n",
              "      <td>Newcastle United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1310</th>\n",
              "      <td>B. Brobbey</td>\n",
              "      <td>20</td>\n",
              "      <td>76</td>\n",
              "      <td>85</td>\n",
              "      <td>16500000</td>\n",
              "      <td>ST</td>\n",
              "      <td>Ajax</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1646</th>\n",
              "      <td>Nico González</td>\n",
              "      <td>20</td>\n",
              "      <td>75</td>\n",
              "      <td>85</td>\n",
              "      <td>12500000</td>\n",
              "      <td>CM</td>\n",
              "      <td>Valencia CF</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf97befd-4722-4fc2-92e0-69cb2abf3222')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cf97befd-4722-4fc2-92e0-69cb2abf3222 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cf97befd-4722-4fc2-92e0-69cb2abf3222');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Less or equal than 25 years and cheaper than 10k euros\n",
        "df_players_age = df.loc[df['Age'] <= 30]\n",
        "df_playersag_sorted = df_players_age.sort_values(by='Age')\n",
        "df_potential_young_cheap = df_playersag_sorted.loc[(df['Potential'] >= 80) & (df['Value(in Euro)'] <= 1000000) & (df['Positions Played'] == 'CAM')]\n",
        "df_potential_young_sorted = df_potential_young_cheap.sort_values(by = 'Potential', ascending = False)\n",
        "df_potential_young_sorted[['Known As','Full Name','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]\n",
        "#[['Known As','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]"
      ],
      "metadata": {
        "id": "rFmS-tvjXYCz",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "dbc20716-b70b-4206-c128-b176ae1ad484"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Known As           Full Name  Age  Overall  Potential  Value(in Euro)  \\\n",
              "14140  L. Harris         Luke Harris   17       61         84         1000000   \n",
              "14147   T. Nakai      Takuhiro Nakai   18       61         83         1000000   \n",
              "14871  J. Bahoya  Jean-Mattéo Bahoya   17       60         82          775000   \n",
              "13163    B. Ince          Burak Ince   18       62         81         1000000   \n",
              "13900  J. McAtee        James McAtee   19       62         80         1000000   \n",
              "\n",
              "      Positions Played              Club Name  \n",
              "14140              CAM                 Fulham  \n",
              "14147              CAM         Real Madrid CF  \n",
              "14871              CAM             Angers SCO  \n",
              "13163              CAM  DSC Arminia Bielefeld  \n",
              "13900              CAM       Sheffield United  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-adcb06b6-2dbc-4335-8b30-8e75c3a3f760\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14140</th>\n",
              "      <td>L. Harris</td>\n",
              "      <td>Luke Harris</td>\n",
              "      <td>17</td>\n",
              "      <td>61</td>\n",
              "      <td>84</td>\n",
              "      <td>1000000</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Fulham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14147</th>\n",
              "      <td>T. Nakai</td>\n",
              "      <td>Takuhiro Nakai</td>\n",
              "      <td>18</td>\n",
              "      <td>61</td>\n",
              "      <td>83</td>\n",
              "      <td>1000000</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Real Madrid CF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14871</th>\n",
              "      <td>J. Bahoya</td>\n",
              "      <td>Jean-Mattéo Bahoya</td>\n",
              "      <td>17</td>\n",
              "      <td>60</td>\n",
              "      <td>82</td>\n",
              "      <td>775000</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Angers SCO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13163</th>\n",
              "      <td>B. Ince</td>\n",
              "      <td>Burak Ince</td>\n",
              "      <td>18</td>\n",
              "      <td>62</td>\n",
              "      <td>81</td>\n",
              "      <td>1000000</td>\n",
              "      <td>CAM</td>\n",
              "      <td>DSC Arminia Bielefeld</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13900</th>\n",
              "      <td>J. McAtee</td>\n",
              "      <td>James McAtee</td>\n",
              "      <td>19</td>\n",
              "      <td>62</td>\n",
              "      <td>80</td>\n",
              "      <td>1000000</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Sheffield United</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-adcb06b6-2dbc-4335-8b30-8e75c3a3f760')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-adcb06b6-2dbc-4335-8b30-8e75c3a3f760 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-adcb06b6-2dbc-4335-8b30-8e75c3a3f760');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Less or equal than 25 years and cheaper than 50k euros\n",
        "df_players_age = df.loc[df['Age'] <= 30]\n",
        "df_playersag_sorted = df_players_age.sort_values(by='Age')\n",
        "df_potential_young_cheap = df_playersag_sorted.loc[(df['Potential'] >= 80) & (df['Value(in Euro)'] <= 5000000)]\n",
        "df_potential_young_sorted = df_potential_young_cheap.sort_values(by = 'Potential', ascending = False)\n",
        "df_potential_young_sorted[['Known As','Full Name','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]\n",
        "#[['Known As','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]"
      ],
      "metadata": {
        "id": "mp1sRrt2LxjC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "9cb9472e-d76f-4b05-f221-1229490e6c4d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Known As                  Full Name  Age  Overall  Potential  \\\n",
              "5658        Y. Moukoko          Youssoufa Moukoko   17       69         88   \n",
              "6918           A. Nusa               Antonio Nusa   17       68         88   \n",
              "5472          A. Scott                 Alex Scott   18       69         87   \n",
              "7290  J. Bynoe-Gittens        Jamie Bynoe-Gittens   17       67         87   \n",
              "4446             Sávio  Sávio Moreira de Oliveira   18       70         86   \n",
              "...                ...                        ...  ...      ...        ...   \n",
              "5578       R. Onyedika           Raphael Onyedika   21       69         80   \n",
              "6105      M. De Cuyper            Maxim De Cuyper   21       69         80   \n",
              "5906        H. Smolčić             Hrvoje Smolčić   21       69         80   \n",
              "5898       F. Fagúndez            Franco Fagúndez   21       69         80   \n",
              "4911    Robert Navarro       Robert Navarro Muñoz   20       70         80   \n",
              "\n",
              "      Value(in Euro) Positions Played                  Club Name  \n",
              "5658         3500000               ST          Borussia Dortmund  \n",
              "6918         3300000         LW,RW,ST             Club Brugge KV  \n",
              "5472         3500000        CAM,CM,RM               Bristol City  \n",
              "7290         2800000            LM,RM          Borussia Dortmund  \n",
              "4446         4000000               RW                        PSV  \n",
              "...              ...              ...                        ...  \n",
              "5578         3000000           CDM,CM             Club Brugge KV  \n",
              "6105         3000000            LB,LM               KVC Westerlo  \n",
              "5906         2900000               CB        Eintracht Frankfurt  \n",
              "5898         3200000        ST,CAM,CF  Club Nacional de Football  \n",
              "4911         3500000        LW,CAM,CM              Real Sociedad  \n",
              "\n",
              "[535 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3ae1cb0a-2ebd-4d3a-9f88-4c0cfdbbdeed\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Full Name</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5658</th>\n",
              "      <td>Y. Moukoko</td>\n",
              "      <td>Youssoufa Moukoko</td>\n",
              "      <td>17</td>\n",
              "      <td>69</td>\n",
              "      <td>88</td>\n",
              "      <td>3500000</td>\n",
              "      <td>ST</td>\n",
              "      <td>Borussia Dortmund</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6918</th>\n",
              "      <td>A. Nusa</td>\n",
              "      <td>Antonio Nusa</td>\n",
              "      <td>17</td>\n",
              "      <td>68</td>\n",
              "      <td>88</td>\n",
              "      <td>3300000</td>\n",
              "      <td>LW,RW,ST</td>\n",
              "      <td>Club Brugge KV</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5472</th>\n",
              "      <td>A. Scott</td>\n",
              "      <td>Alex Scott</td>\n",
              "      <td>18</td>\n",
              "      <td>69</td>\n",
              "      <td>87</td>\n",
              "      <td>3500000</td>\n",
              "      <td>CAM,CM,RM</td>\n",
              "      <td>Bristol City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7290</th>\n",
              "      <td>J. Bynoe-Gittens</td>\n",
              "      <td>Jamie Bynoe-Gittens</td>\n",
              "      <td>17</td>\n",
              "      <td>67</td>\n",
              "      <td>87</td>\n",
              "      <td>2800000</td>\n",
              "      <td>LM,RM</td>\n",
              "      <td>Borussia Dortmund</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4446</th>\n",
              "      <td>Sávio</td>\n",
              "      <td>Sávio Moreira de Oliveira</td>\n",
              "      <td>18</td>\n",
              "      <td>70</td>\n",
              "      <td>86</td>\n",
              "      <td>4000000</td>\n",
              "      <td>RW</td>\n",
              "      <td>PSV</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5578</th>\n",
              "      <td>R. Onyedika</td>\n",
              "      <td>Raphael Onyedika</td>\n",
              "      <td>21</td>\n",
              "      <td>69</td>\n",
              "      <td>80</td>\n",
              "      <td>3000000</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>Club Brugge KV</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6105</th>\n",
              "      <td>M. De Cuyper</td>\n",
              "      <td>Maxim De Cuyper</td>\n",
              "      <td>21</td>\n",
              "      <td>69</td>\n",
              "      <td>80</td>\n",
              "      <td>3000000</td>\n",
              "      <td>LB,LM</td>\n",
              "      <td>KVC Westerlo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5906</th>\n",
              "      <td>H. Smolčić</td>\n",
              "      <td>Hrvoje Smolčić</td>\n",
              "      <td>21</td>\n",
              "      <td>69</td>\n",
              "      <td>80</td>\n",
              "      <td>2900000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Eintracht Frankfurt</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5898</th>\n",
              "      <td>F. Fagúndez</td>\n",
              "      <td>Franco Fagúndez</td>\n",
              "      <td>21</td>\n",
              "      <td>69</td>\n",
              "      <td>80</td>\n",
              "      <td>3200000</td>\n",
              "      <td>ST,CAM,CF</td>\n",
              "      <td>Club Nacional de Football</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4911</th>\n",
              "      <td>Robert Navarro</td>\n",
              "      <td>Robert Navarro Muñoz</td>\n",
              "      <td>20</td>\n",
              "      <td>70</td>\n",
              "      <td>80</td>\n",
              "      <td>3500000</td>\n",
              "      <td>LW,CAM,CM</td>\n",
              "      <td>Real Sociedad</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>535 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ae1cb0a-2ebd-4d3a-9f88-4c0cfdbbdeed')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3ae1cb0a-2ebd-4d3a-9f88-4c0cfdbbdeed button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3ae1cb0a-2ebd-4d3a-9f88-4c0cfdbbdeed');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#less than 25 years\n",
        "df_players_age = df.loc[df['Age'] <= 25]\n",
        "df_playersag_sorted = df_players_age.sort_values(by='Age')\n",
        "df_potential_young = df_playersag_sorted.loc[df['Potential'] >= 85]\n",
        "df_potential_young_sorted = df_potential_young.sort_values(by = 'Potential', ascending = False)\n",
        "df_potential_young_sorted[['Known As','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]"
      ],
      "metadata": {
        "id": "CWO2rkgfSsvF",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "8ae71125-bd4b-42d4-eb87-7f2139ef03f6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Known As  Age  Overall  Potential  Value(in Euro) Positions Played  \\\n",
              "4        K. Mbappé   23       91         95       190500000            ST,LW   \n",
              "21      E. Haaland   21       88         94       148000000               ST   \n",
              "82           Pedri   19       85         93       116000000               CM   \n",
              "83        P. Foden   22       85         92       109500000        LW,CF,CAM   \n",
              "63    Vinícius Jr.   21       86         92       109000000               LW   \n",
              "...            ...  ...      ...        ...             ...              ...   \n",
              "2476     K. Taylor   20       73         85         7500000           CM,CDM   \n",
              "1082    Florentino   22       76         85        16000000           CDM,CM   \n",
              "544    M. Caqueret   22       79         85        26000000           CDM,CM   \n",
              "688      P. Kalulu   22       78         85        26500000            CB,RB   \n",
              "1290        Sancet   22       76         85        17000000        ST,CM,CAM   \n",
              "\n",
              "                    Club Name  \n",
              "4         Paris Saint-Germain  \n",
              "21            Manchester City  \n",
              "82               FC Barcelona  \n",
              "83            Manchester City  \n",
              "63             Real Madrid CF  \n",
              "...                       ...  \n",
              "2476                     Ajax  \n",
              "1082               SL Benfica  \n",
              "544        Olympique Lyonnais  \n",
              "688                  AC Milan  \n",
              "1290  Athletic Club de Bilbao  \n",
              "\n",
              "[284 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-833e3be4-fc74-473f-9f0a-ba08be6d554d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>K. Mbappé</td>\n",
              "      <td>23</td>\n",
              "      <td>91</td>\n",
              "      <td>95</td>\n",
              "      <td>190500000</td>\n",
              "      <td>ST,LW</td>\n",
              "      <td>Paris Saint-Germain</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>E. Haaland</td>\n",
              "      <td>21</td>\n",
              "      <td>88</td>\n",
              "      <td>94</td>\n",
              "      <td>148000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Pedri</td>\n",
              "      <td>19</td>\n",
              "      <td>85</td>\n",
              "      <td>93</td>\n",
              "      <td>116000000</td>\n",
              "      <td>CM</td>\n",
              "      <td>FC Barcelona</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>P. Foden</td>\n",
              "      <td>22</td>\n",
              "      <td>85</td>\n",
              "      <td>92</td>\n",
              "      <td>109500000</td>\n",
              "      <td>LW,CF,CAM</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Vinícius Jr.</td>\n",
              "      <td>21</td>\n",
              "      <td>86</td>\n",
              "      <td>92</td>\n",
              "      <td>109000000</td>\n",
              "      <td>LW</td>\n",
              "      <td>Real Madrid CF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2476</th>\n",
              "      <td>K. Taylor</td>\n",
              "      <td>20</td>\n",
              "      <td>73</td>\n",
              "      <td>85</td>\n",
              "      <td>7500000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>Ajax</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1082</th>\n",
              "      <td>Florentino</td>\n",
              "      <td>22</td>\n",
              "      <td>76</td>\n",
              "      <td>85</td>\n",
              "      <td>16000000</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>SL Benfica</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>544</th>\n",
              "      <td>M. Caqueret</td>\n",
              "      <td>22</td>\n",
              "      <td>79</td>\n",
              "      <td>85</td>\n",
              "      <td>26000000</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>Olympique Lyonnais</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>688</th>\n",
              "      <td>P. Kalulu</td>\n",
              "      <td>22</td>\n",
              "      <td>78</td>\n",
              "      <td>85</td>\n",
              "      <td>26500000</td>\n",
              "      <td>CB,RB</td>\n",
              "      <td>AC Milan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1290</th>\n",
              "      <td>Sancet</td>\n",
              "      <td>22</td>\n",
              "      <td>76</td>\n",
              "      <td>85</td>\n",
              "      <td>17000000</td>\n",
              "      <td>ST,CM,CAM</td>\n",
              "      <td>Athletic Club de Bilbao</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>284 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-833e3be4-fc74-473f-9f0a-ba08be6d554d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-833e3be4-fc74-473f-9f0a-ba08be6d554d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-833e3be4-fc74-473f-9f0a-ba08be6d554d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#less than 30 years\n",
        "df_players_age = df.loc[df['Age'] <= 30]\n",
        "df_playersag_sorted = df_players_age.sort_values(by='Age')\n",
        "df_potential_young = df_playersag_sorted.loc[df['Potential'] >= 85]\n",
        "df_potential_young_sorted = df_potential_young.sort_values(by = 'Potential', ascending = False)\n",
        "df_potential_young_sorted[['Known As','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']]"
      ],
      "metadata": {
        "id": "joShfsZMhUCD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "6a4fd90a-97bc-4dff-b46e-3e7be6d5e767"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Known As  Age  Overall  Potential  Value(in Euro)  \\\n",
              "4          K. Mbappé   23       91         95       190500000   \n",
              "21        E. Haaland   21       88         94       148000000   \n",
              "82             Pedri   19       85         93       116000000   \n",
              "22     G. Donnarumma   23       88         92       103500000   \n",
              "63      Vinícius Jr.   21       86         92       109000000   \n",
              "...              ...  ...      ...        ...             ...   \n",
              "419    N. Milenković   24       80         85        29000000   \n",
              "415      N. González   24       80         85        32000000   \n",
              "385   Renato Sanches   24       80         85        31500000   \n",
              "2042       A. Elanga   20       74         85         9500000   \n",
              "78     Gerard Moreno   30       85         85        53000000   \n",
              "\n",
              "     Positions Played            Club Name  \n",
              "4               ST,LW  Paris Saint-Germain  \n",
              "21                 ST      Manchester City  \n",
              "82                 CM         FC Barcelona  \n",
              "22                 GK  Paris Saint-Germain  \n",
              "63                 LW       Real Madrid CF  \n",
              "...               ...                  ...  \n",
              "419                CB           Fiorentina  \n",
              "415             RW,LW           Fiorentina  \n",
              "385             CM,RM  Paris Saint-Germain  \n",
              "2042         RW,LW,RM    Manchester United  \n",
              "78                 ST        Villarreal CF  \n",
              "\n",
              "[346 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-64516693-6710-4458-9380-5cb2f6fd6c6c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>K. Mbappé</td>\n",
              "      <td>23</td>\n",
              "      <td>91</td>\n",
              "      <td>95</td>\n",
              "      <td>190500000</td>\n",
              "      <td>ST,LW</td>\n",
              "      <td>Paris Saint-Germain</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>E. Haaland</td>\n",
              "      <td>21</td>\n",
              "      <td>88</td>\n",
              "      <td>94</td>\n",
              "      <td>148000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>Manchester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Pedri</td>\n",
              "      <td>19</td>\n",
              "      <td>85</td>\n",
              "      <td>93</td>\n",
              "      <td>116000000</td>\n",
              "      <td>CM</td>\n",
              "      <td>FC Barcelona</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>G. Donnarumma</td>\n",
              "      <td>23</td>\n",
              "      <td>88</td>\n",
              "      <td>92</td>\n",
              "      <td>103500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>Paris Saint-Germain</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>63</th>\n",
              "      <td>Vinícius Jr.</td>\n",
              "      <td>21</td>\n",
              "      <td>86</td>\n",
              "      <td>92</td>\n",
              "      <td>109000000</td>\n",
              "      <td>LW</td>\n",
              "      <td>Real Madrid CF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>N. Milenković</td>\n",
              "      <td>24</td>\n",
              "      <td>80</td>\n",
              "      <td>85</td>\n",
              "      <td>29000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Fiorentina</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>N. González</td>\n",
              "      <td>24</td>\n",
              "      <td>80</td>\n",
              "      <td>85</td>\n",
              "      <td>32000000</td>\n",
              "      <td>RW,LW</td>\n",
              "      <td>Fiorentina</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>385</th>\n",
              "      <td>Renato Sanches</td>\n",
              "      <td>24</td>\n",
              "      <td>80</td>\n",
              "      <td>85</td>\n",
              "      <td>31500000</td>\n",
              "      <td>CM,RM</td>\n",
              "      <td>Paris Saint-Germain</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2042</th>\n",
              "      <td>A. Elanga</td>\n",
              "      <td>20</td>\n",
              "      <td>74</td>\n",
              "      <td>85</td>\n",
              "      <td>9500000</td>\n",
              "      <td>RW,LW,RM</td>\n",
              "      <td>Manchester United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Gerard Moreno</td>\n",
              "      <td>30</td>\n",
              "      <td>85</td>\n",
              "      <td>85</td>\n",
              "      <td>53000000</td>\n",
              "      <td>ST</td>\n",
              "      <td>Villarreal CF</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>346 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64516693-6710-4458-9380-5cb2f6fd6c6c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-64516693-6710-4458-9380-5cb2f6fd6c6c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-64516693-6710-4458-9380-5cb2f6fd6c6c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Increase Potential"
      ],
      "metadata": {
        "id": "oiDppmROkB9Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Here we are able to see how many our players will evolve"
      ],
      "metadata": {
        "id": "5SGQO3Bh37xY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['Increase Potential'] = df['Potential'] - df['Overall']\n",
        "df[['Known As','Overall','Potential','Increase Potential','Value(in Euro)','Positions Played','Club Name']].sort_values(by = 'Increase Potential', ascending = False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "h0XOXWXokHt9",
        "outputId": "178077a7-fb98-4e43-98a8-d0781abb463a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Known As  Overall  Potential  Increase Potential  Value(in Euro)  \\\n",
              "17796    Y. Gomis       53         79                  26          350000   \n",
              "17806  E. Mayenda       53         79                  26          375000   \n",
              "17813   D. Lobban       53         79                  26          375000   \n",
              "18232   B. Faraas       51         76                  25          180000   \n",
              "17815   L. Harvey       53         78                  25          300000   \n",
              "...           ...      ...        ...                 ...             ...   \n",
              "6335   B. Henning       68         68                   0         1300000   \n",
              "6337     Í. Ávila       68         68                   0         1000000   \n",
              "13280  M. Hilßner       62         62                   0          425000   \n",
              "13279    Rong Hao       62         62                   0          120000   \n",
              "0        L. Messi       91         91                   0        54000000   \n",
              "\n",
              "      Positions Played               Club Name  \n",
              "17796               CB             Le Havre AC  \n",
              "17806               ST  FC Sochaux-Montbéliard  \n",
              "17813              CAM                Aberdeen  \n",
              "18232               CM         Hamarkameratene  \n",
              "17815               ST                Aberdeen  \n",
              "...                ...                     ...  \n",
              "6335            CM,CAM  Eintracht Braunschweig  \n",
              "6337          ST,RW,RM   Club Sporting Cristal  \n",
              "13280        RW,LM,CDM           Coventry City  \n",
              "13279         RB,RW,RM            Guangzhou FC  \n",
              "0                   RW     Paris Saint-Germain  \n",
              "\n",
              "[18539 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e6b1d10f-200a-4d0f-9a1b-504d5d038029\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Increase Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>17796</th>\n",
              "      <td>Y. Gomis</td>\n",
              "      <td>53</td>\n",
              "      <td>79</td>\n",
              "      <td>26</td>\n",
              "      <td>350000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Le Havre AC</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17806</th>\n",
              "      <td>E. Mayenda</td>\n",
              "      <td>53</td>\n",
              "      <td>79</td>\n",
              "      <td>26</td>\n",
              "      <td>375000</td>\n",
              "      <td>ST</td>\n",
              "      <td>FC Sochaux-Montbéliard</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17813</th>\n",
              "      <td>D. Lobban</td>\n",
              "      <td>53</td>\n",
              "      <td>79</td>\n",
              "      <td>26</td>\n",
              "      <td>375000</td>\n",
              "      <td>CAM</td>\n",
              "      <td>Aberdeen</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18232</th>\n",
              "      <td>B. Faraas</td>\n",
              "      <td>51</td>\n",
              "      <td>76</td>\n",
              "      <td>25</td>\n",
              "      <td>180000</td>\n",
              "      <td>CM</td>\n",
              "      <td>Hamarkameratene</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17815</th>\n",
              "      <td>L. Harvey</td>\n",
              "      <td>53</td>\n",
              "      <td>78</td>\n",
              "      <td>25</td>\n",
              "      <td>300000</td>\n",
              "      <td>ST</td>\n",
              "      <td>Aberdeen</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6335</th>\n",
              "      <td>B. Henning</td>\n",
              "      <td>68</td>\n",
              "      <td>68</td>\n",
              "      <td>0</td>\n",
              "      <td>1300000</td>\n",
              "      <td>CM,CAM</td>\n",
              "      <td>Eintracht Braunschweig</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6337</th>\n",
              "      <td>Í. Ávila</td>\n",
              "      <td>68</td>\n",
              "      <td>68</td>\n",
              "      <td>0</td>\n",
              "      <td>1000000</td>\n",
              "      <td>ST,RW,RM</td>\n",
              "      <td>Club Sporting Cristal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13280</th>\n",
              "      <td>M. Hilßner</td>\n",
              "      <td>62</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>425000</td>\n",
              "      <td>RW,LM,CDM</td>\n",
              "      <td>Coventry City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13279</th>\n",
              "      <td>Rong Hao</td>\n",
              "      <td>62</td>\n",
              "      <td>62</td>\n",
              "      <td>0</td>\n",
              "      <td>120000</td>\n",
              "      <td>RB,RW,RM</td>\n",
              "      <td>Guangzhou FC</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>L. Messi</td>\n",
              "      <td>91</td>\n",
              "      <td>91</td>\n",
              "      <td>0</td>\n",
              "      <td>54000000</td>\n",
              "      <td>RW</td>\n",
              "      <td>Paris Saint-Germain</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>18539 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6b1d10f-200a-4d0f-9a1b-504d5d038029')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e6b1d10f-200a-4d0f-9a1b-504d5d038029 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e6b1d10f-200a-4d0f-9a1b-504d5d038029');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.scatterplot(data = df, x = \"Age\", y = \"Increase Potential\")\n",
        "plt.title('Potential increase by age')\n",
        "plt.show()\n",
        "sns.lineplot(data=df, x=\"Age\", y=\"Increase Potential\")\n",
        "plt.title('Potential increase by age')\n",
        "plt.show()\n",
        "relacao = df.groupby(\"Age\")[\"Increase Potential\"].mean()\n",
        "relacao.plot(kind = 'bar')\n",
        "plt.title('Potential increase by age')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "2NVkgrkI5Vgq",
        "outputId": "2f36c9c1-63a2-4700-81fb-80bbe01ae172"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAiwAAAHKCAYAAAAgghDrAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABCdElEQVR4nO3deVhWdf7/8dcN4o0bkIgiiuBuVmpREKaBZiFZqWOWTo1kaY4jNWY1I02lkzbktGgzmlbj1mKWZlpfzRlDzTG31CitNEQQTcEtQDDR5PP7o5/3eCer3ugHej6u61yX55zPed/vw3J4eZb7dhhjjAAAACzmdakbAAAAKA+BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFqOEcDofGjx9f6e1Wr14th8Oh1atXlzluzpw5cjgcyszMPK/+fk0yMzPlcDj0wgsvXOpWgGqHwAL8f2f+8J6ZfH191a5dOyUmJionJ6fS9V555RXNmTPH842WYNmyZecVSgCguqh1qRsAbPPMM8+oZcuWOnHihNauXavp06dr2bJl2r59u+rWrVvhOq+88ooaNWqk++67r+qa/f+WLVumadOmlRhafvzxR9WqVXW/6r/73e80aNAgOZ3OKnsNACCwAL8QHx+va6+9VpI0bNgwBQYG6qWXXtKSJUs0ePDgS9xd5fn6+lZpfW9vb3l7e1fpa/zSiRMnVLt2bXl5cZIY+LXgtx0oR8+ePSVJGRkZkqSffvpJEyZMUOvWreV0OhUeHq4nnnhCRUVFrm3Cw8P19ddf69NPP3VdYoqNjXWtz83N1ejRoxUaGiqn06k2bdpo0qRJKi4udo05+36H1157zfV61113nT7//HPXuPvuu0/Tpk2TJLdLWmf88h6WPXv26A9/+IPat2+vOnXqKDAwUAMHDjzve1BKuoclPDxct912m9auXavIyEj5+vqqVatWeuONN87ZPjc3V4888ojCw8PldDrVvHlzDRkyRIcPH5b0v3tp5s+fryeffFLNmjVT3bp1lZ+fL0nauHGjevfuLX9/f9WtW1cxMTH67LPP3F6jovt86tQp/fWvf1Xbtm3l6+urwMBAdevWTStWrHAbt2PHDt15551q2LChfH19de211+rDDz+s1Ndt8uTJCgsLU506dRQTE6Pt27e71s2ePVsOh0NffPHFOdv97W9/k7e3t77//vtSa1fme/zVV18pJiZGderUUfPmzTVx4kTX6/9y/Mcff6zu3burXr16atCggfr06aOvv/66UvsNnC/OsADlSE9PlyQFBgZK+vmsy9y5c3XnnXfq0Ucf1caNG5WcnKxvv/1WH3zwgSRpypQpeuihh1S/fn395S9/kSQ1adJEknT8+HHFxMTo+++/14gRI9SiRQutW7dOSUlJOnDggKZMmeL2+vPmzdOxY8c0YsQIORwO/f3vf9dvfvMb7d69Wz4+PhoxYoT279+vFStW6M033yx3fz7//HOtW7dOgwYNUvPmzZWZmanp06crNjZW33zzTaUue5Vl165duvPOO/XAAw8oISFBs2bN0n333aeIiAhdccUVkqSCggJ1795d3377re6//35dc801Onz4sD788EPt27dPjRo1ctWbMGGCateurccee0xFRUWqXbu2Vq5cqfj4eEVERGjcuHHy8vLS7Nmz1bNnT/33v/9VZGRkpfZ5/PjxSk5O1rBhwxQZGan8/Hxt3rxZW7du1c033yxJ+vrrr3XDDTeoWbNmGjt2rOrVq6f33ntP/fr10/vvv6/+/fuX+7V54403dOzYMY0aNUonTpzQyy+/rJ49e2rbtm1q0qSJ7rzzTo0aNUpvv/22rr76ardt3377bcXGxqpZs2al1q/o/n7//ffq0aOHHA6HkpKSVK9ePf3rX/8q8fLem2++qYSEBMXFxWnSpEk6fvy4pk+frm7duumLL75QeHh4ufsNXBADwBhjzOzZs40k88knn5hDhw6ZvXv3mvnz55vAwEBTp04ds2/fPpOammokmWHDhrlt+9hjjxlJZuXKla5lV1xxhYmJiTnndSZMmGDq1atnvvvuO7flY8eONd7e3iYrK8sYY0xGRoaRZAIDA83Ro0dd45YsWWIkmY8++si1bNSoUaa0X2dJZty4ca7548ePnzNm/fr1RpJ54403XMtWrVplJJlVq1aVWPeMM1+3jIwM17KwsDAjyaxZs8a17ODBg8bpdJpHH33Utezpp582ksyiRYvOqVtcXOzWR6tWrdx6Ly4uNm3btjVxcXGusWf2r2XLlubmm2+u9D537tzZ9OnTp8z9vemmm8xVV11lTpw44dZL165dTdu2bcvc9sz39MzP0xkbN240kswjjzziWjZ48GATEhJiTp8+7Vq2detWI8nMnj27zNep6P4+9NBDxuFwmC+++MK17MiRI6Zhw4Zu39Njx46ZgIAAM3z4cLea2dnZxt/f/5zlQFXgkhDwC7169VJQUJBCQ0M1aNAg1a9fXx988IGaNWumZcuWSZLGjBnjts2jjz4qSVq6dGm59RcsWKDu3bvrsssu0+HDh11Tr169dPr0aa1Zs8Zt/N13363LLrvMNd+9e3dJ0u7du89r/+rUqeP696lTp3TkyBG1adNGAQEB2rp163nVLEnHjh1dvUpSUFCQ2rdv79b3+++/r86dO5d4VuLsy1qSlJCQ4NZ7amqq0tLS9Nvf/lZHjhxxfR0LCwt10003ac2aNa5LbBXd54CAAH399ddKS0srcZ+OHj2qlStX6q677tKxY8dcr3nkyBHFxcUpLS2tzEs1Z/Tr18/tDElkZKSioqJcP1+SNGTIEO3fv1+rVq1yLXv77bdVp04dDRgwoMz6Fd3f5cuXKzo6Wl26dHEta9iwoe655x63eitWrFBubq4GDx7s9jPr7e2tqKgotx6BqsIlIeAXpk2bpnbt2qlWrVpq0qSJ2rdv77q5c8+ePfLy8lKbNm3ctgkODlZAQID27NlTbv20tDR99dVXCgoKKnH9wYMH3eZbtGjhNn8mvPzwww8V3qez/fjjj0pOTtbs2bP1/fffyxjjWpeXl3deNUvyy76ln3s/u+/09PRy//ie0bJlS7f5M6EiISGh1G3y8vJ02WWXVXifn3nmGfXt21ft2rXTlVdeqd69e+t3v/udOnXqJOnny1zGGD311FN66qmnSnzNgwcPlnm5RpLatm17zrJ27drpvffec83ffPPNatq0qd5++23ddNNNKi4u1jvvvKO+ffuqQYMGZdav6P7u2bNH0dHR52z/y5/vM1/rM/dz/ZKfn1+Z/QCeQGABfiEyMtL1lFBpfvm//8ooLi7WzTffrD/96U8lrm/Xrp3bfGlP4Jz9R6gyHnroIc2ePVujR49WdHS0/P395XA4NGjQILebfi+Up/s++6yBJFevzz//vNsZgrPVr19fUsX3+cYbb1R6erqWLFmi//znP/rXv/6lyZMna8aMGRo2bJhr7GOPPaa4uLgSX/OXf+zPl7e3t37729/q9ddf1yuvvKLPPvtM+/fv17333lvutp7+Hp/Z5s0331RwcPA566vysXngDH7KgEoICwtTcXGx0tLSdPnll7uW5+TkKDc3V2FhYa5lpYWa1q1bq6CgQL169fJYX5UJUAsXLlRCQoJefPFF17ITJ04oNzfXY/1UVOvWrd2ejqnsttLP/7sv72tZmX1u2LChhg4dqqFDh6qgoEA33nijxo8fr2HDhqlVq1aSJB8fnwv6/pV0yem7774758bVIUOG6MUXX9RHH32kjz/+WEFBQaUGpbNVdH/DwsK0a9euc7b/5bIzX+vGjRt79OcWqAzuYQEq4dZbb5Wkc57keemllyRJffr0cS2rV69eiX8Q77rrLq1fv17//ve/z1mXm5urn376qdJ91atXz7V9eby9vc85y/HPf/5Tp0+frvTrXqgBAwboyy+/dD1ddbbyzsRERESodevWeuGFF1RQUHDO+kOHDrn+XdF9PnLkiNt8/fr11aZNG9cj640bN1ZsbKxeffVVHThwoMzXLMvixYvd7nXZtGmTNm7cqPj4eLdxnTp1UqdOnfSvf/1L77//vgYNGlShsxkV3d+4uDitX79eqamprmVHjx7V22+/fc44Pz8//e1vf9OpU6fOeb2K7jdwITjDAlRC586dlZCQoNdee025ubmKiYnRpk2bNHfuXPXr1089evRwjY2IiND06dM1ceJEtWnTRo0bN1bPnj31+OOP68MPP9Rtt93mesy3sLBQ27Zt08KFC5WZmen2OG9FRERESJIefvhhxcXFydvbW4MGDSpx7G233aY333xT/v7+6tixo9avX69PPvnE9dj2xfT4449r4cKFGjhwoO6//35FRETo6NGj+vDDDzVjxgx17ty51G29vLz0r3/9S/Hx8briiis0dOhQNWvWTN9//71WrVolPz8/ffTRR5Iqvs8dO3ZUbGysIiIi1LBhQ23evFkLFy5UYmKia8y0adPUrVs3XXXVVRo+fLhatWqlnJwcrV+/Xvv27dOXX35Z7n63adNG3bp108iRI1VUVKQpU6YoMDCwxMuEQ4YM0WOPPSZJFbocVJn9/dOf/qS33npLN998sx566CHXY80tWrTQ0aNHXWfu/Pz8NH36dP3ud7/TNddco0GDBikoKEhZWVlaunSpbrjhBk2dOrVCvQHn7VI9ngTY5szjuZ9//nmZ406dOmX++te/mpYtWxofHx8TGhpqkpKS3B5zNebnRz779OljGjRoYCS5PeJ87Ngxk5SUZNq0aWNq165tGjVqZLp2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hKhVq1a65557lJWVVerY5ORk+fv7u6bQ0FBPtg0AACxTpYFl7ty5atCggX7zm9+UOS4qKkpz5szR8uXLNX36dGVkZKh79+46duxYieOTkpKUl5fnmvbu3VsV7QMAAEtU6Vvzz5o1S/fcc498fX3LHHf2JaZOnTopKipKYWFheu+990o8O+N0OuV0Oj3eLwAAsFOVBZb//ve/2rlzp959991KbxsQEKB27dpp165dVdAZAACobqrsktDMmTMVERGhzp07V3rbgoICpaenq2nTplXQGQAAqG4qHVgKCgqUmpqq1NRUSVJGRoZSU1PdbpLNz8/XggULNGzYsBJr3HTTTZo6dapr/rHHHtOnn36qzMxMrVu3Tv3795e3t7cGDx5c2fYAAEANVOlLQps3b1aPHj1c82PGjJEkJSQkaM6cOZKk+fPnyxhTauBIT0/X4cOHXfP79u3T4MGDdeTIEQUFBalbt27asGGDgoKCKtseAACogSodWGJjY2WMKXPMgw8+qAcffLDU9ZmZmW7z8+fPr2wbAADgV4TPEgIAANYjsAAAAOsRWAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGC9Wpe6gV+L8LFLyx2T+Vyfi9AJAADVD2dYAACA9QgsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGA9AgsAALBepQPLmjVrdPvttyskJEQOh0OLFy92W3/ffffJ4XC4Tb179y637rRp0xQeHi5fX19FRUVp06ZNlW0NAADUUJUOLIWFhercubOmTZtW6pjevXvrwIEDrumdd94ps+a7776rMWPGaNy4cdq6das6d+6suLg4HTx4sLLtAQCAGqhWZTeIj49XfHx8mWOcTqeCg4MrXPOll17S8OHDNXToUEnSjBkztHTpUs2aNUtjx46tbIsAAKCGqZJ7WFavXq3GjRurffv2GjlypI4cOVLq2JMnT2rLli3q1avX/5ry8lKvXr20fv36ErcpKipSfn6+2wQAAGoujweW3r1764033lBKSoomTZqkTz/9VPHx8Tp9+nSJ4w8fPqzTp0+rSZMmbsubNGmi7OzsErdJTk6Wv7+/awoNDfX0bgAAAItU+pJQeQYNGuT691VXXaVOnTqpdevWWr16tW666SaPvEZSUpLGjBnjms/Pzye0AABQg1X5Y82tWrVSo0aNtGvXrhLXN2rUSN7e3srJyXFbnpOTU+p9ME6nU35+fm4TAACouao8sOzbt09HjhxR06ZNS1xfu3ZtRUREKCUlxbWsuLhYKSkpio6Orur2AABANVDpwFJQUKDU1FSlpqZKkjIyMpSamqqsrCwVFBTo8ccf14YNG5SZmamUlBT17dtXbdq0UVxcnKvGTTfdpKlTp7rmx4wZo9dff11z587Vt99+q5EjR6qwsND11BAAAPh1q/Q9LJs3b1aPHj1c82fuJUlISND06dP11Vdfae7cucrNzVVISIhuueUWTZgwQU6n07VNenq6Dh8+7Jq/++67dejQIT399NPKzs5Wly5dtHz58nNuxAUAAL9OlQ4ssbGxMsaUuv7f//53uTUyMzPPWZaYmKjExMTKtgMAAH4F+CwhAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGA9AgsAALAegQUAAFiPwAIAAKxHYAEAANYjsAAAAOsRWAAAgPVqXeoGUDnhY5eWOybzuT4XoRMAAC4ezrAAAADrEVgAAID1CCwAAMB6BBYAAGA9AgsAALAegQUAAFiPwAIAAKxHYAEAANYjsAAAAOsRWAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAepUOLGvWrNHtt9+ukJAQORwOLV682LXu1KlT+vOf/6yrrrpK9erVU0hIiIYMGaL9+/eXWXP8+PFyOBxuU4cOHSq9MwAAoGaqdGApLCxU586dNW3atHPWHT9+XFu3btVTTz2lrVu3atGiRdq5c6fuuOOOcuteccUVOnDggGtau3ZtZVsDAAA1VK3KbhAfH6/4+PgS1/n7+2vFihVuy6ZOnarIyEhlZWWpRYsWpTdSq5aCg4Mr1ENRUZGKiopc8/n5+RXaDgAAVE9Vfg9LXl6eHA6HAgICyhyXlpamkJAQtWrVSvfcc4+ysrJKHZucnCx/f3/XFBoa6uGuAQCATao0sJw4cUJ//vOfNXjwYPn5+ZU6LioqSnPmzNHy5cs1ffp0ZWRkqHv37jp27FiJ45OSkpSXl+ea9u7dW1W7AAAALFDpS0IVderUKd11110yxmj69Olljj37ElOnTp0UFRWlsLAwvffee3rggQfOGe90OuV0Oj3eMwAAsFOVBJYzYWXPnj1auXJlmWdXShIQEKB27dpp165dVdEeAACoZjx+SehMWElLS9Mnn3yiwMDAStcoKChQenq6mjZt6un2AABANVTpwFJQUKDU1FSlpqZKkjIyMpSamqqsrCydOnVKd955pzZv3qy3335bp0+fVnZ2trKzs3Xy5ElXjZtuuklTp051zT/22GP69NNPlZmZqXXr1ql///7y9vbW4MGDL3wPAQBAtVfpS0KbN29Wjx49XPNjxoyRJCUkJGj8+PH68MMPJUldunRx227VqlWKjY2VJKWnp+vw4cOudfv27dPgwYN15MgRBQUFqVu3btqwYYOCgoIq2x4AAKiBKh1YYmNjZYwpdX1Z687IzMx0m58/f35l2wAAAL8ifJYQAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGC9Kvu0ZtgtfOzScsdkPtfnInQCAED5OMMCAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGA9AgsAALAegQUAAFiPwAIAAKxHYAEAANYjsAAAAOsRWAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWq3RgWbNmjW6//XaFhITI4XBo8eLFbuuNMXr66afVtGlT1alTR7169VJaWlq5dadNm6bw8HD5+voqKipKmzZtqmxrAACghqp0YCksLFTnzp01bdq0Etf//e9/1z/+8Q/NmDFDGzduVL169RQXF6cTJ06UWvPdd9/VmDFjNG7cOG3dulWdO3dWXFycDh48WNn2AABADVTpwBIfH6+JEyeqf//+56wzxmjKlCl68skn1bdvX3Xq1ElvvPGG9u/ff86ZmLO99NJLGj58uIYOHaqOHTtqxowZqlu3rmbNmlXi+KKiIuXn57tNAACg5vLoPSwZGRnKzs5Wr169XMv8/f0VFRWl9evXl7jNyZMntWXLFrdtvLy81KtXr1K3SU5Olr+/v2sKDQ315G4AAADLeDSwZGdnS5KaNGnitrxJkyaudb90+PBhnT59ulLbJCUlKS8vzzXt3bvXA90DAABb1brUDZwPp9Mpp9N5qdsAAAAXiUfPsAQHB0uScnJy3Jbn5OS41v1So0aN5O3tXaltAADAr4tHz7C0bNlSwcHBSklJUZcuXSRJ+fn52rhxo0aOHFniNrVr11ZERIRSUlLUr18/SVJxcbFSUlKUmJjoyfbgYeFjl5Y7JvO5PhehEwBATVfpwFJQUKBdu3a55jMyMpSamqqGDRuqRYsWGj16tCZOnKi2bduqZcuWeuqppxQSEuIKI5J00003qX///q5AMmbMGCUkJOjaa69VZGSkpkyZosLCQg0dOvTC9xAAAFR7lQ4smzdvVo8ePVzzY8aMkSQlJCRozpw5+tOf/qTCwkI9+OCDys3NVbdu3bR8+XL5+vq6tklPT9fhw4dd83fffbcOHTqkp59+WtnZ2erSpYuWL19+zo24AADg16nSgSU2NlbGmFLXOxwOPfPMM3rmmWdKHZOZmXnOssTERC4BAQCAEvFZQgAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGA9AgsAALAegQUAAFiPwAIAAKxHYAEAANYjsAAAAOsRWAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9Wpd6gaA8LFLyx2T+Vyfi9AJAMBWnGEBAADW83hgCQ8Pl8PhOGcaNWpUiePnzJlzzlhfX19PtwUAAKoxj18S+vzzz3X69GnX/Pbt23XzzTdr4MCBpW7j5+ennTt3uuYdDoen2wIAANWYxwNLUFCQ2/xzzz2n1q1bKyYmptRtHA6HgoODPd0KAACoIar0HpaTJ0/qrbfe0v3331/mWZOCggKFhYUpNDRUffv21ddff11m3aKiIuXn57tNAACg5qrSwLJ48WLl5ubqvvvuK3VM+/btNWvWLC1ZskRvvfWWiouL1bVrV+3bt6/UbZKTk+Xv7++aQkNDq6B7AABgiyoNLDNnzlR8fLxCQkJKHRMdHa0hQ4aoS5cuiomJ0aJFixQUFKRXX3211G2SkpKUl5fnmvbu3VsV7QMAAEtU2fuw7NmzR5988okWLVpUqe18fHx09dVXa9euXaWOcTqdcjqdF9oiAACoJqrsDMvs2bPVuHFj9elTuTf8On36tLZt26amTZtWUWcAAKC6qZLAUlxcrNmzZyshIUG1armfxBkyZIiSkpJc888884z+85//aPfu3dq6davuvfde7dmzR8OGDauK1gAAQDVUJZeEPvnkE2VlZen+++8/Z11WVpa8vP6Xk3744QcNHz5c2dnZuuyyyxQREaF169apY8eOVdEaAACohqoksNxyyy0yxpS4bvXq1W7zkydP1uTJk6uiDQAAUEPwWUIAAMB6BBYAAGA9AgsAALAegQUAAFiPwAIAAKxHYAEAANYjsAAAAOtV2WcJARdb+Nil5Y7JfK5yHxUBALADZ1gAAID1CCwAAMB6BBYAAGA9AgsAALAegQUAAFiPwAIAAKxHYAEAANYjsAAAAOsRWAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGA9jweW8ePHy+FwuE0dOnQoc5sFCxaoQ4cO8vX11VVXXaVly5Z5ui0AAFCNVckZliuuuEIHDhxwTWvXri117Lp16zR48GA98MAD+uKLL9SvXz/169dP27dvr4rWAABANVSrSorWqqXg4OAKjX355ZfVu3dvPf7445KkCRMmaMWKFZo6dapmzJhRFe0BZQofu7TM9ZnP9blInQAAzqiSMyxpaWkKCQlRq1atdM899ygrK6vUsevXr1evXr3clsXFxWn9+vWlblNUVKT8/Hy3CQAA1FweDyxRUVGaM2eOli9frunTpysjI0Pdu3fXsWPHShyfnZ2tJk2auC1r0qSJsrOzS32N5ORk+fv7u6bQ0FCP7gMAALCLxwNLfHy8Bg4cqE6dOikuLk7Lli1Tbm6u3nvvPY+9RlJSkvLy8lzT3r17PVYbAADYp0ruYTlbQECA2rVrp127dpW4Pjg4WDk5OW7LcnJyyrwHxul0yul0erRPAABgryp/H5aCggKlp6eradOmJa6Pjo5WSkqK27IVK1YoOjq6qlsDAADVhMcDy2OPPaZPP/1UmZmZWrdunfr37y9vb28NHjxYkjRkyBAlJSW5xv/xj3/U8uXL9eKLL2rHjh0aP368Nm/erMTERE+3BgAAqimPXxLat2+fBg8erCNHjigoKEjdunXThg0bFBQUJEnKysqSl9f/clLXrl01b948Pfnkk3riiSfUtm1bLV68WFdeeaWnWwMAANWUxwPL/Pnzy1y/evXqc5YNHDhQAwcO9HQrAACghuCzhAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6tS51A0BNFD52abljMp/rcxE6AYCagTMsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsR2ABAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGA9AgsAALAegQUAAFiPwAIAAKxHYAEAANYjsAAAAOsRWAAAgPU8HliSk5N13XXXqUGDBmrcuLH69eunnTt3lrnNnDlz5HA43CZfX19PtwYAAKopjweWTz/9VKNGjdKGDRu0YsUKnTp1SrfccosKCwvL3M7Pz08HDhxwTXv27PF0awAAoJqq5emCy5cvd5ufM2eOGjdurC1btujGG28sdTuHw6Hg4OAKvUZRUZGKiopc8/n5+efXLAAAqBaq/B6WvLw8SVLDhg3LHFdQUKCwsDCFhoaqb9+++vrrr0sdm5ycLH9/f9cUGhrq0Z4BAIBdqjSwFBcXa/To0brhhht05ZVXljquffv2mjVrlpYsWaK33npLxcXF6tq1q/bt21fi+KSkJOXl5bmmvXv3VtUuAAAAC3j8ktDZRo0ape3bt2vt2rVljouOjlZ0dLRrvmvXrrr88sv16quvasKECeeMdzqdcjqdHu8XAADYqcoCS2Jiov7v//5Pa9asUfPmzSu1rY+Pj66++mrt2rWriroDAADViccvCRljlJiYqA8++EArV65Uy5YtK13j9OnT2rZtm5o2berp9gAAQDXk8TMso0aN0rx587RkyRI1aNBA2dnZkiR/f3/VqVNHkjRkyBA1a9ZMycnJkqRnnnlG119/vdq0aaPc3Fw9//zz2rNnj4YNG+bp9gAAQDXk8cAyffp0SVJsbKzb8tmzZ+u+++6TJGVlZcnL638nd3744QcNHz5c2dnZuuyyyxQREaF169apY8eOnm4PAABUQx4PLMaYcsesXr3abX7y5MmaPHmyp1sBAAA1BJ8lBAAArEdgAQAA1qvS92EBcGHCxy4td0zmc30uQicAcGlxhgUAAFiPwAIAAKxHYAEAANYjsAAAAOsRWAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFAABYj8ACAACsV+tSNwCg6oWPXVrumMzn+lyETgDg/HCGBQAAWI/AAgAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHm8cB6BCePM5AJcSZ1gAAID1CCwAAMB6BBYAAGC9Kgss06ZNU3h4uHx9fRUVFaVNmzaVOX7BggXq0KGDfH19ddVVV2nZsmVV1RoAAKhmquSm23fffVdjxozRjBkzFBUVpSlTpiguLk47d+5U48aNzxm/bt06DR48WMnJybrttts0b9489evXT1u3btWVV15ZFS0CuES4eRfA+aiSMywvvfSShg8frqFDh6pjx46aMWOG6tatq1mzZpU4/uWXX1bv3r31+OOP6/LLL9eECRN0zTXXaOrUqVXRHgAAqGY8fobl5MmT2rJli5KSklzLvLy81KtXL61fv77EbdavX68xY8a4LYuLi9PixYtLHF9UVKSioiLXfF5eniQpPz/fbVxx0fFy+/3lNiUpr44nalTHOjb1cjHr2NTLxaxjUy8AaoYzv+vGmPIHGw/7/vvvjSSzbt06t+WPP/64iYyMLHEbHx8fM2/ePLdl06ZNM40bNy5x/Lhx44wkJiYmJiYmphow7d27t9x8US3fOC4pKcntjExxcbGOHj2qwMBAORyOErfJz89XaGio9u7dKz8/v/N+bZvq2NSLbXVs6sVTdWzqxbY6NvXiqTo29WJbHZt68VQdm3q5mHWMMTp27JhCQkLKreXxwNKoUSN5e3srJyfHbXlOTo6Cg4NL3CY4OLhS451Op5xOp9uygICACvXn5+d3QV98G+vY1IttdWzqxVN1bOrFtjo29eKpOjb1Ylsdm3rxVB2berlYdfz9/StUw+M33dauXVsRERFKSUlxLSsuLlZKSoqio6NL3CY6OtptvCStWLGi1PEAAODXpUouCY0ZM0YJCQm69tprFRkZqSlTpqiwsFBDhw6VJA0ZMkTNmjVTcnKyJOmPf/yjYmJi9OKLL6pPnz6aP3++Nm/erNdee60q2gMAANVMlQSWu+++W4cOHdLTTz+t7OxsdenSRcuXL1eTJk0kSVlZWfLy+t/Jna5du2revHl68skn9cQTT6ht27ZavHixR9+Dxel0aty4cedcSqrOdWzqxbY6NvXiqTo29WJbHZt68VQdm3qxrY5NvXiqjk292FhHkhzGVORZIgAAgEuHzxICAADWI7AAAADrEVgAAID1CCwAAMB6BBYAAGA9AgsAALBetfwsIVy4TZs2af369crOzpb088cjREdHKzIy0iP1f/jhB3300UcaMmRIhcYXFxe7vTfP2cv37dunFi1alLm9MUaZmZkKDQ1VrVq1dPLkSX3wwQcqKirSrbfeqkaNGp3XfkhSz549NXv2bIWFhZ13jYyMDO3atUtNmzat0PsLFRUVycvLSz4+PpKk9PR0zZo1S1lZWQoLC9MDDzygli1bllvn/fffV3x8vOrWrXvevZ/x5ZdfasuWLYqNjVWrVq309ddfa9q0aSouLlb//v0VFxdX4VorV67U2rVrdeDAAXl5ealVq1a644471LZt2wvuE6guatpxuCSeOH66VOADmKulvXv3mkOHDrnm16xZY37729+abt26mXvuueecT5MuzQsvvGAyMzMvuJ+PPvrIPPXUU2bt2rXGGGNSUlJMfHy8iYuLM6+++mqF6xw/ftzMnDnTDB061PTu3dvceuutJjEx0XzyyScV2j4nJ8d069bNOBwOExYWZiIjI01kZKQJCwszDofDdOvWzeTk5JzXPp4tNTXVeHl5lTsuLy/PDBw40Pj6+prGjRubp556yvz000+u9dnZ2eXW2bFjhwkLCzNeXl6mTZs2Zvfu3SYiIsLUq1fP1K1b1zRq1Mh899135fayZMmSEidvb28zdepU13x5Ro4caY4dO2aM+fn7NWDAAOPl5WUcDofx8vIyPXr0cK0vTUxMjFmwYIExxpi1a9cap9NpOnXqZO6++25z9dVXm7p161boZ9jhcBg/Pz8zfPhws2HDhnLHl+b999833t7eJjAw0NSvX9+sWLHCBAQEmF69epm4uDjj7e1t3n777XLr5OTkmMjISOPl5WVq1aplvLy8TEREhAkODjbe3t7m8ccfr3BPGzduNFOmTDFjx441Y8eONVOmTDEbN2487338paNHj5q5c+dWePzp06dLXb5nz54K1SguLja7d+82p06dMsYYU1RUZObPn2/mzp3rdjyrrB49elzwcWz37t3mP//5j9m2bVuFtzlx4oQ5efKka37Xrl3miSeeMPfee6/5y1/+Ynbv3l1ujYULF5rCwsLz6vmXUlNTzcyZM016eroxxpjt27ebkSNHmhEjRpjly5dXqlZKSor561//an7/+9+bP/zhD+aFF16o0HHGmJp5HPbU8bMsNTawREZGmo8++sgYY8zixYuNl5eXueOOO8yf//xn079/f+Pj4+NaXxaHw2G8vb1Nr169zPz5801RUVGle5kxY4apVauWiYiIMH5+fubNN980DRo0MMOGDTMjRowwderUMVOmTCm3TlpamgkLCzONGzc2oaGhxuFwmD59+pioqCjj7e1tBg4c6DrQlWbAgAEmOjra7Nix45x1O3bsMF27djV33nlnub3k5eWVOf33v/+t0C/Kww8/bNq1a2cWLFhgXn/9dRMWFmb69Onj+jpnZ2cbh8NRZo2+ffuaO+64w3z11Vdm9OjR5vLLLzd9+/Y1J0+eNCdOnDC33367uffee8vt5UygcDgcpU4V2ScvLy/XwSYpKck0b97crFy50hQWFpq1a9ea1q1bm7Fjx5ZZw8/Pz3Xwi4mJMY888ojb+ieffNLccMMNFdqnZ555xlx99dXG4XCYK664wkyePNkcPny43G3Pds0115iJEycaY4x55513TEBAgHnmmWdc61944QXTpUuXcuvcfffdpl+/fiYvL8+cOHHCJCYmmiFDhhhjfv4DEBgYWO7vQk082BvjmeBtU+g2xjPBuyaG7pp4HPbU8bMsNTaw1KtXz5Xeo6KizHPPPee2/p///Ke5+uqry63jcDjM7NmzTd++fY2Pj48JDAw0f/zjHyv1v4yOHTua1157zRhjzMqVK42vr6+ZNm2aa/3s2bPN5ZdfXm6d+Ph4M2LECFNcXGyMMea5554z8fHxxhhjvvvuOxMeHm7GjRtXZo369eubrVu3lrp+8+bNpn79+uX2cuaHr7Spoj+cLVq0MKtWrXLNHzp0yERGRppbbrnFnDhxokIH+6CgIPPFF18YY4wpKCgwDofD/Pe//3Wt/+yzz0yLFi3K7aV3796mT58+5/yxq1Wrlvn666/L3f4Mh8PhqnHllVeaefPmua1fsmSJ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9O/fX++8806J66ZOnarBgwdXKDzZVMemXjxVx6ZebKszcuRIt4PglVde6XbW5uOPP67Q0x41sY5NvXiqjk29eLLO2QYNGqTNmzdr0aJFCgsLq9S2ttbxVC9n+1W8DwsAAKjeauwZFgAAUHMQWAAAgPUILAAAwHoEFgAAYD0CCwAAsB6BBcAls379enl7e6tPnz6XuhUAluOxZgCXzLBhw1S/fn3NnDlTO3fuVEhIyKVuCYClOMMC4JIoKCjQu+++q5EjR6pPnz6aM2eO2/oPP/xQbdu2la+vr3r06KG5c+fK4XAoNzfXNWbt2rXq3r276tSpo9DQUD388MMqLCy8uDsC4KIgsAC4JN577z116NBB7du317333qtZs2a53uU2IyNDd955p/r166cvv/xSI0aM0F/+8he37dPT09W7d28NGDBAX331ld59912tXbtWiYmJl2J3AFQxLgkBuCRuuOEG3XXXXfrjH/+on376SU2bNtWCBQsUGxursWPHaunSpdq2bZtr/JNPPqlnn31WP/zwgwICAjRs2DB5e3vr1VdfdY1Zu3atYmJiVFhYKF9f30uxWwCqCGdYAFx0O3fu1KZNmzR48GBJUq1atXT33Xdr5syZrvXXXXed2zaRkZFu819++aXmzJmj+vXru6a4uDgVFxcrIyPj4uwIgIumVvlDAMCzZs6cqZ9++sntJltjjJxOp6ZOnVqhGgUFBRoxYoQefvjhc9ad/em5AGoGAguAi+qnn37SG2+8oRdffFG33HKL27p+/frpnXfeUfv27bVs2TK3dZ9//rnb/DXXXKNvvvlGbdq0qfKeAVx63MMC4KJavHix7r77bh08eFD+/v5u6/785z9r5cqVeu+999S+fXs98sgjeuCBB5SamqpHH31U+/btU25urvz9/fXVV1/p+uuv1/33369hw4apXr16+uabb7RixYoKn6UBUH1wDwuAi2rmzJnq1avXOWFFkgYMGKDNmzfr2LFjWrhwoRYtWqROnTpp+vTprqeEnE6nJKlTp0769NNP9d1336l79+66+uqr9fTTT/NeLkANxRkWANXCs88+qxkzZmjv3r2XuhUAlwD3sACw0iuvvKLrrrtOgYGB+uyzz/T888/zHivArxiBBYCV0tLSNHHiRB09elQtWrTQo48+qqSkpEvdFoBLhEtCAADAetx0CwAArEdgAQAA1iOwAAAA6xFYAACA9QgsAADAegQWAABgPQILAACwHoEFAABY7/8BeoJVpzYJ+8gAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "This show to us that as young the player is the more increase potential he has. So, the first years are **crucial** to define his carreer."
      ],
      "metadata": {
        "id": "z9aV7vd05hcj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Good players by position"
      ],
      "metadata": {
        "id": "9565HP-1SRnR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#here we can see the top player of each position based on overall, value (...)"
      ],
      "metadata": {
        "id": "FswswOIM4fIB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Position CB cheaper than 10k\n",
        "df_potential_young_CB = df.loc[(df['Potential'] >= 80) & (df['Value(in Euro)'] <= 10000000) & (df['Overall'] >= 75) & (df['Positions Played'].str.contains('CB') ) ]\n",
        "df_potential_young_sorted = df_potential_young_CB.sort_values(by = 'Age', ascending = True)\n",
        "df_potential_youngtalented_sorted = df_potential_young_sorted.sort_values(by = ['Increase Potential','Potential', 'Age'] , ascending = True)\n",
        "df_potential_youngtalented_sorted2 = df_potential_youngtalented_sorted.loc[df['Increase Potential'] >= 3].sort_values('Potential')\n",
        "df_potential_youngtalented_sorted2[['Known As','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']].tail(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "kuCtV10RSZ-B",
        "outputId": "1297f478-a399-42e7-e2ed-21f224c5148f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Known As  Age  Overall  Potential  Value(in Euro) Positions Played  \\\n",
              "1882      M. Wöber   24       75         80         7500000               CB   \n",
              "1886    K. Itakura   25       75         80         7500000           CB,CDM   \n",
              "1745      K. Danso   23       75         80         7500000               CB   \n",
              "1175   J. Bednarek   26       76         80         9000000               CB   \n",
              "1283  J. St. Juste   25       76         80         9500000            CB,RB   \n",
              "1214     G. Nyamsi   25       76         80         9500000               CB   \n",
              "1220   O. Alderete   25       76         80         9500000               CB   \n",
              "1240       R. Koch   25       76         80         9500000           CB,CDM   \n",
              "1639      K. Danso   23       75         80         7500000               CB   \n",
              "1499    L. Balerdi   23       75         81         8000000               CB   \n",
              "1497    S. Bornauw   23       75         81         8000000               CB   \n",
              "1428    S. Bornauw   23       75         81         8000000               CB   \n",
              "1750    L. Balerdi   23       75         81         8000000               CB   \n",
              "1319          Igor   24       76         81        10000000               CB   \n",
              "1601    V. Nelsson   23       75         81         8000000               CB   \n",
              "1252     R. Oxford   23       76         81        10000000        CB,CDM,RB   \n",
              "1715      F. Gatti   24       75         81         8000000               CB   \n",
              "1765    V. Nelsson   23       75         81         8000000               CB   \n",
              "1844      F. Gatti   24       75         81         8000000               CB   \n",
              "1038     C. Montes   25       77         82               0               CB   \n",
              "\n",
              "                     Club Name  \n",
              "1882      FC Red Bull Salzburg  \n",
              "1886  Borussia Mönchengladbach  \n",
              "1745       Racing Club de Lens  \n",
              "1175               Aston Villa  \n",
              "1283               Sporting CP  \n",
              "1214      RC Strasbourg Alsace  \n",
              "1220                 Getafe CF  \n",
              "1240              Leeds United  \n",
              "1639       Racing Club de Lens  \n",
              "1499    Olympique de Marseille  \n",
              "1497             VfL Wolfsburg  \n",
              "1428             VfL Wolfsburg  \n",
              "1750    Olympique de Marseille  \n",
              "1319                Fiorentina  \n",
              "1601            Galatasaray SK  \n",
              "1252               FC Augsburg  \n",
              "1715                  Juventus  \n",
              "1765            Galatasaray SK  \n",
              "1844                  Juventus  \n",
              "1038                Free agent  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c77ad6a2-5987-45f8-8854-f5934ce0d782\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1882</th>\n",
              "      <td>M. Wöber</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>7500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>FC Red Bull Salzburg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1886</th>\n",
              "      <td>K. Itakura</td>\n",
              "      <td>25</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>7500000</td>\n",
              "      <td>CB,CDM</td>\n",
              "      <td>Borussia Mönchengladbach</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1745</th>\n",
              "      <td>K. Danso</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>7500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Racing Club de Lens</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1175</th>\n",
              "      <td>J. Bednarek</td>\n",
              "      <td>26</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Aston Villa</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1283</th>\n",
              "      <td>J. St. Juste</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>CB,RB</td>\n",
              "      <td>Sporting CP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1214</th>\n",
              "      <td>G. Nyamsi</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>RC Strasbourg Alsace</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1220</th>\n",
              "      <td>O. Alderete</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Getafe CF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1240</th>\n",
              "      <td>R. Koch</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>CB,CDM</td>\n",
              "      <td>Leeds United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1639</th>\n",
              "      <td>K. Danso</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>7500000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Racing Club de Lens</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1499</th>\n",
              "      <td>L. Balerdi</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Olympique de Marseille</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1497</th>\n",
              "      <td>S. Bornauw</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>VfL Wolfsburg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1428</th>\n",
              "      <td>S. Bornauw</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>VfL Wolfsburg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1750</th>\n",
              "      <td>L. Balerdi</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Olympique de Marseille</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1319</th>\n",
              "      <td>Igor</td>\n",
              "      <td>24</td>\n",
              "      <td>76</td>\n",
              "      <td>81</td>\n",
              "      <td>10000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Fiorentina</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1601</th>\n",
              "      <td>V. Nelsson</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Galatasaray SK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1252</th>\n",
              "      <td>R. Oxford</td>\n",
              "      <td>23</td>\n",
              "      <td>76</td>\n",
              "      <td>81</td>\n",
              "      <td>10000000</td>\n",
              "      <td>CB,CDM,RB</td>\n",
              "      <td>FC Augsburg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1715</th>\n",
              "      <td>F. Gatti</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Juventus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1765</th>\n",
              "      <td>V. Nelsson</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Galatasaray SK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1844</th>\n",
              "      <td>F. Gatti</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CB</td>\n",
              "      <td>Juventus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1038</th>\n",
              "      <td>C. Montes</td>\n",
              "      <td>25</td>\n",
              "      <td>77</td>\n",
              "      <td>82</td>\n",
              "      <td>0</td>\n",
              "      <td>CB</td>\n",
              "      <td>Free agent</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c77ad6a2-5987-45f8-8854-f5934ce0d782')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c77ad6a2-5987-45f8-8854-f5934ce0d782 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c77ad6a2-5987-45f8-8854-f5934ce0d782');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Position RB cheaper than 10k\n",
        "df_potential_young_CB = df.loc[(df['Potential'] >= 80) & (df['Value(in Euro)'] <= 10000000) & (df['Overall'] >= 75) & (df['Positions Played'].str.contains('RB') ) ]\n",
        "df_potential_young_sorted = df_potential_young_CB.sort_values(by = 'Age', ascending = True)\n",
        "df_potential_youngtalented_sorted = df_potential_young_sorted.sort_values(by = ['Increase Potential','Potential', 'Age'] , ascending = True)\n",
        "df_potential_youngtalented_sorted2 = df_potential_youngtalented_sorted.loc[df['Increase Potential'] >= 3].sort_values('Potential')\n",
        "df_potential_youngtalented_sorted2[['Known As','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']].tail(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "nM9fEszQbvuz",
        "outputId": "ef8cef79-8e3a-4fcf-e6f8-60c37ba3431c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Known As  Age  Overall  Potential  Value(in Euro) Positions Played  \\\n",
              "1283  J. St. Juste   25       76         80         9500000            CB,RB   \n",
              "1596    Pol Lirola   24       75         80         8000000            RB,RM   \n",
              "1252     R. Oxford   23       76         81        10000000        CB,CDM,RB   \n",
              "\n",
              "        Club Name  \n",
              "1283  Sporting CP  \n",
              "1596     Elche CF  \n",
              "1252  FC Augsburg  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-83dc063c-6dac-41f9-bfc5-0359e38aed78\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1283</th>\n",
              "      <td>J. St. Juste</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>CB,RB</td>\n",
              "      <td>Sporting CP</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1596</th>\n",
              "      <td>Pol Lirola</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8000000</td>\n",
              "      <td>RB,RM</td>\n",
              "      <td>Elche CF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1252</th>\n",
              "      <td>R. Oxford</td>\n",
              "      <td>23</td>\n",
              "      <td>76</td>\n",
              "      <td>81</td>\n",
              "      <td>10000000</td>\n",
              "      <td>CB,CDM,RB</td>\n",
              "      <td>FC Augsburg</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83dc063c-6dac-41f9-bfc5-0359e38aed78')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-83dc063c-6dac-41f9-bfc5-0359e38aed78 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-83dc063c-6dac-41f9-bfc5-0359e38aed78');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Position GK cheaper than 10k\n",
        "df_potential_young_CB = df.loc[(df['Potential'] >= 80) & (df['Value(in Euro)'] <= 10000000) & (df['Overall'] >= 75) & (df['Positions Played'].str.contains('GK') ) ]\n",
        "df_potential_young_sorted = df_potential_young_CB.sort_values(by = 'Age', ascending = True)\n",
        "df_potential_youngtalented_sorted = df_potential_young_sorted.sort_values(by = ['Increase Potential','Potential', 'Age'] , ascending = True)\n",
        "df_potential_youngtalented_sorted2 = df_potential_youngtalented_sorted.loc[df['Increase Potential'] >= 3].sort_values('Potential')\n",
        "df_potential_youngtalented_sorted2[['Known As','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']].tail(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "S0vsSgilci64",
        "outputId": "6c651941-9982-49fb-c5f6-624cbbcf3556"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Known As  Age  Overall  Potential  Value(in Euro)  \\\n",
              "897        M. Turner   28       77         80         9500000   \n",
              "1103       F. Müller   24       76         80         8500000   \n",
              "1123      L. Montipò   26       76         80         8000000   \n",
              "1598  M. Di Gregorio   24       75         80         7000000   \n",
              "1427        M. Rodák   25       75         80         6500000   \n",
              "1187   P. Bernardoni   25       76         81         9000000   \n",
              "1786   E. Destanoğlu   21       75         81         7500000   \n",
              "1517   E. Destanoğlu   21       75         81         7500000   \n",
              "1481     J. Graterol   25       75         81         7000000   \n",
              "1413     J. Graterol   25       75         81         7000000   \n",
              "\n",
              "     Positions Played        Club Name  \n",
              "897                GK          Arsenal  \n",
              "1103               GK    VfB Stuttgart  \n",
              "1123               GK    Hellas Verona  \n",
              "1598               GK         AC Monza  \n",
              "1427               GK           Fulham  \n",
              "1187               GK       Angers SCO  \n",
              "1786               GK      Beşiktaş JK  \n",
              "1517               GK      Beşiktaş JK  \n",
              "1481               GK  América de Cali  \n",
              "1413               GK  América de Cali  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dd2d48ee-7f8a-430c-8f4b-e84173d020a4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>897</th>\n",
              "      <td>M. Turner</td>\n",
              "      <td>28</td>\n",
              "      <td>77</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>Arsenal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1103</th>\n",
              "      <td>F. Müller</td>\n",
              "      <td>24</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>8500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>VfB Stuttgart</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1123</th>\n",
              "      <td>L. Montipò</td>\n",
              "      <td>26</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>8000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>Hellas Verona</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1598</th>\n",
              "      <td>M. Di Gregorio</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>7000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>AC Monza</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1427</th>\n",
              "      <td>M. Rodák</td>\n",
              "      <td>25</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>6500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>Fulham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1187</th>\n",
              "      <td>P. Bernardoni</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>81</td>\n",
              "      <td>9000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>Angers SCO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1786</th>\n",
              "      <td>E. Destanoğlu</td>\n",
              "      <td>21</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>7500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>Beşiktaş JK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1517</th>\n",
              "      <td>E. Destanoğlu</td>\n",
              "      <td>21</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>7500000</td>\n",
              "      <td>GK</td>\n",
              "      <td>Beşiktaş JK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1481</th>\n",
              "      <td>J. Graterol</td>\n",
              "      <td>25</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>7000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>América de Cali</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1413</th>\n",
              "      <td>J. Graterol</td>\n",
              "      <td>25</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>7000000</td>\n",
              "      <td>GK</td>\n",
              "      <td>América de Cali</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd2d48ee-7f8a-430c-8f4b-e84173d020a4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dd2d48ee-7f8a-430c-8f4b-e84173d020a4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dd2d48ee-7f8a-430c-8f4b-e84173d020a4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Position CDM cheaper than 10k\n",
        "df_potential_young_CB = df.loc[(df['Potential'] >= 80) & (df['Value(in Euro)'] <= 10000000) & (df['Overall'] >= 75) & (df['Positions Played'].str.contains('CDM') ) ]\n",
        "df_potential_young_sorted = df_potential_young_CB.sort_values(by = 'Age', ascending = True)\n",
        "df_potential_youngtalented_sorted = df_potential_young_sorted.sort_values(by = ['Increase Potential','Potential', 'Age'] , ascending = True)\n",
        "df_potential_youngtalented_sorted2 = df_potential_youngtalented_sorted.loc[df['Increase Potential'] >= 3].sort_values('Potential')\n",
        "df_potential_youngtalented_sorted2[['Known As','Age','Overall','Potential','Value(in Euro)','Positions Played','Club Name']].tail(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "RImSEpZhdDkX",
        "outputId": "c46ce2ef-8dae-4455-9ae2-8d7e383c6860"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Known As  Age  Overall  Potential  Value(in Euro)  \\\n",
              "1551        K. Itakura   25       75         80         7500000   \n",
              "1552     J. Bellegarde   24       75         80         8500000   \n",
              "1482        Jean Lucas   24       75         80         8500000   \n",
              "1240           R. Koch   25       76         80         9500000   \n",
              "1414        M. Sadílek   23       75         80         8000000   \n",
              "1630  K. Dewsbury-Hall   23       75         80         8500000   \n",
              "1299             Edgar   25       76         80         9500000   \n",
              "1525        O. Mangala   24       75         80         8500000   \n",
              "1863           A. Král   24       75         80         8000000   \n",
              "1603     J. Bellegarde   24       75         80         8500000   \n",
              "1515        M. Sadílek   23       75         80         8000000   \n",
              "1586    Santi Comesaña   25       75         81         8000000   \n",
              "1252         R. Oxford   23       76         81        10000000   \n",
              "1876            Pepelu   23       75         81         9000000   \n",
              "1806            Pepelu   23       75         81         9000000   \n",
              "1710          S. Berge   24       75         81         8000000   \n",
              "1523         Moncayola   24       75         81         9000000   \n",
              "1896          S. Berge   24       75         81         8000000   \n",
              "1478         Moncayola   24       75         81         9000000   \n",
              "1589        E. Atuesta   25       75         82               0   \n",
              "\n",
              "     Positions Played                 Club Name  \n",
              "1551           CB,CDM  Borussia Mönchengladbach  \n",
              "1552           CM,CDM      RC Strasbourg Alsace  \n",
              "1482       CM,CDM,CAM                 AS Monaco  \n",
              "1240           CB,CDM              Leeds United  \n",
              "1414        CDM,CM,LB                 FC Twente  \n",
              "1630           CM,CDM            Leicester City  \n",
              "1299           CB,CDM       Real Betis Balompié  \n",
              "1525           CM,CDM         Nottingham Forest  \n",
              "1863           CDM,CM             FC Schalke 04  \n",
              "1603           CM,CDM      RC Strasbourg Alsace  \n",
              "1515        CDM,CM,LB                 FC Twente  \n",
              "1586       CDM,CM,CAM            Rayo Vallecano  \n",
              "1252        CB,CDM,RB               FC Augsburg  \n",
              "1876           CM,CDM   Levante Unión Deportiva  \n",
              "1806           CM,CDM   Levante Unión Deportiva  \n",
              "1710           CDM,CM          Sheffield United  \n",
              "1523           CM,CDM                CA Osasuna  \n",
              "1896           CDM,CM          Sheffield United  \n",
              "1478           CM,CDM                CA Osasuna  \n",
              "1589           CDM,CM                Free agent  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2fee1664-bc4d-4243-9dda-7042f555e354\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Age</th>\n",
              "      <th>Overall</th>\n",
              "      <th>Potential</th>\n",
              "      <th>Value(in Euro)</th>\n",
              "      <th>Positions Played</th>\n",
              "      <th>Club Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1551</th>\n",
              "      <td>K. Itakura</td>\n",
              "      <td>25</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>7500000</td>\n",
              "      <td>CB,CDM</td>\n",
              "      <td>Borussia Mönchengladbach</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1552</th>\n",
              "      <td>J. Bellegarde</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8500000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>RC Strasbourg Alsace</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1482</th>\n",
              "      <td>Jean Lucas</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8500000</td>\n",
              "      <td>CM,CDM,CAM</td>\n",
              "      <td>AS Monaco</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1240</th>\n",
              "      <td>R. Koch</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>CB,CDM</td>\n",
              "      <td>Leeds United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1414</th>\n",
              "      <td>M. Sadílek</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CDM,CM,LB</td>\n",
              "      <td>FC Twente</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1630</th>\n",
              "      <td>K. Dewsbury-Hall</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8500000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>Leicester City</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1299</th>\n",
              "      <td>Edgar</td>\n",
              "      <td>25</td>\n",
              "      <td>76</td>\n",
              "      <td>80</td>\n",
              "      <td>9500000</td>\n",
              "      <td>CB,CDM</td>\n",
              "      <td>Real Betis Balompié</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1525</th>\n",
              "      <td>O. Mangala</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8500000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>Nottingham Forest</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1863</th>\n",
              "      <td>A. Král</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>FC Schalke 04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1603</th>\n",
              "      <td>J. Bellegarde</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8500000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>RC Strasbourg Alsace</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1515</th>\n",
              "      <td>M. Sadílek</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>80</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CDM,CM,LB</td>\n",
              "      <td>FC Twente</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1586</th>\n",
              "      <td>Santi Comesaña</td>\n",
              "      <td>25</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CDM,CM,CAM</td>\n",
              "      <td>Rayo Vallecano</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1252</th>\n",
              "      <td>R. Oxford</td>\n",
              "      <td>23</td>\n",
              "      <td>76</td>\n",
              "      <td>81</td>\n",
              "      <td>10000000</td>\n",
              "      <td>CB,CDM,RB</td>\n",
              "      <td>FC Augsburg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1876</th>\n",
              "      <td>Pepelu</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>9000000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>Levante Unión Deportiva</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1806</th>\n",
              "      <td>Pepelu</td>\n",
              "      <td>23</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>9000000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>Levante Unión Deportiva</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1710</th>\n",
              "      <td>S. Berge</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>Sheffield United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1523</th>\n",
              "      <td>Moncayola</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>9000000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>CA Osasuna</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1896</th>\n",
              "      <td>S. Berge</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>8000000</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>Sheffield United</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1478</th>\n",
              "      <td>Moncayola</td>\n",
              "      <td>24</td>\n",
              "      <td>75</td>\n",
              "      <td>81</td>\n",
              "      <td>9000000</td>\n",
              "      <td>CM,CDM</td>\n",
              "      <td>CA Osasuna</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1589</th>\n",
              "      <td>E. Atuesta</td>\n",
              "      <td>25</td>\n",
              "      <td>75</td>\n",
              "      <td>82</td>\n",
              "      <td>0</td>\n",
              "      <td>CDM,CM</td>\n",
              "      <td>Free agent</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2fee1664-bc4d-4243-9dda-7042f555e354')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2fee1664-bc4d-4243-9dda-7042f555e354 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2fee1664-bc4d-4243-9dda-7042f555e354');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Player Appreciation**"
      ],
      "metadata": {
        "id": "GX_WW5wK59vc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#In this section we will analyse the value of the player based on some informations."
      ],
      "metadata": {
        "id": "CfcIzJRA6L40"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "hP06A5Kr6viE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Distribuition of player by position**"
      ],
      "metadata": {
        "id": "epTfNXpf6c02"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[['Known As','Best Position']].head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "hkT4JQcb6ioU",
        "outputId": "1044f9a5-0faa-4725-e1f3-05ba8c0c8a9c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Known As Best Position\n",
              "0        L. Messi           CAM\n",
              "1      K. Benzema            CF\n",
              "2  R. Lewandowski            ST\n",
              "3    K. De Bruyne            CM\n",
              "4       K. Mbappé            ST"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d983e501-a2ad-4b86-aeb9-da99460ac50d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Known As</th>\n",
              "      <th>Best Position</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>L. Messi</td>\n",
              "      <td>CAM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>K. Benzema</td>\n",
              "      <td>CF</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>R. Lewandowski</td>\n",
              "      <td>ST</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>K. De Bruyne</td>\n",
              "      <td>CM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>K. Mbappé</td>\n",
              "      <td>ST</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d983e501-a2ad-4b86-aeb9-da99460ac50d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d983e501-a2ad-4b86-aeb9-da99460ac50d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d983e501-a2ad-4b86-aeb9-da99460ac50d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "playerscounter = Counter(df['Best Position'])\n",
        "playerscounter_list = list(playerscounter.values())"
      ],
      "metadata": {
        "id": "lR2e4FFB6khG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "sns.set(style='dark')\n",
        "plt.figure(figsize=(20, 8))\n",
        "explode = (0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1)\n",
        "plt.pie(playerscounter_list, labels=playerscounter, autopct='%1.1f%%', startangle=60, explode = explode, textprops={'fontsize': 10})\n",
        "plt.legend(title='Posições dos Jogadores', loc='upper right')\n",
        "plt.axis('equal')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 655
        },
        "id": "fCy96OsK9Cpk",
        "outputId": "6f884146-0580-4bb0-f4e0-4fa0984503df"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x800 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABiIAAAJ+CAYAAAA+IRgkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdd3gUZdcG8HtmN72THkqAVEoSQuhNBCm+oiiIWLDBC6jvZ+9dVIq9IygqiIhKVaQj0ntL6CWF9N6T3SQ783x/RFbXBLIbkmwS7t915dKdeZ6ZM0vbnTPPOZIQQoCIiIiIiIiIiIiIiKgRyNYOgIiIiIiIiIiIiIiIWi8mIoiIiIiIiIiIiIiIqNEwEUFERERERERERERERI2GiQgiIiIiIiIiIiIiImo0TEQQEREREREREREREVGjYSKCiIiIiIiIiIiIiIgaDRMRRERERERERERERETUaJiIICIiIiIiIiIiIiKiRsNEBBERERERERERERERNRomIoiIiIiIiIiIiIiIqNEwEUFERERERK1WTk4O3nrrLQwfPhzdu3fHddddh4ceegh79+41GTd//nx06dIFCxYsqHGMlStXIiwsDDfeeGONfevXr0dYWBiGDRvWaNdARERERNTSMRFBREREREStUmpqKsaNG4d9+/bhueeew5o1a7BgwQL07dsXM2bMMBm7YsUK/Pe//8WKFStqPZajoyPy8/Nx9OhRk+3Lly9HQEBAo10DEREREVFrwEQEERERERG1SjNmzIAkSVi2bBlGjRqFTp06ISQkBA8++CB++eUX47gDBw5Ar9fjscceQ2lpKY4cOVLjWBqNBmPGjDFJVGRmZuLAgQMYM2ZMk1wPEREREVFLxUQEERERERG1OoWFhdi5cyfuueceODo61tjv6upq/P/ly5fjpptugo2NDcaMGYPly5fXeszx48dj/fr10Ol0AKpLNg0ePBienp6NcxFERERERK0EExFERERERNTqJCcnQwiBzp07X3FcaWkpNm7ciLFjxwIAbrnlFqxfvx5lZWU1xnbt2hXt27fHxo0bIYTAqlWrMH78+EaJn4iIiIioNWEigoiIiIiIWh0hhFnjfv/9d3To0AHh4eEAgC5duqBt27ZYt25drePHjx+PFStW4MCBA9DpdLjuuusaLGYiIiIiotaKiQgiIiIiImp1AgMDIUkSEhISrjhu+fLlOH/+PLp27Wr8uXDhwmWbVt98882IjY3F559/jltuuQVarbYxwiciIiIialX4qZmIiIiIiFodd3d3DBo0CEuWLMG9995bo09EcXExMjIycOLECSxevBhubm7GfUVFRbj33nsRHx+PoKCgGscdNmwY1q9fjzfeeKMpLoWIiIiIqMVjIoKIiIiIiFql119/HXfddRcmTJiAxx57DGFhYVAUBbt378bSpUsxaNAgREZGonfv3jXmRkREYPny5Xj++edr7JszZw5ef/11eHh4NMVlEBERUSNQFAVVVVXWDoOo2bKxsYFGo2mw4zERQUREREQtSk5ODubNm4dt27YhKysLnp6e6NKlC+6//370798fw4YNQ1pamskcX19f7Nixw0oRk7W0b98eK1euxLx58/DOO+8gOzsbbdq0Qbdu3fDyyy/j6aefxtSpU2udO3LkSHz33Xd46qmnauyzt7eHvb19Y4dPREREjUAIgYyMDBQWFsLMllJE1yRJql4N7O/vD0mSrv54wtwubkREREREVpaamoq77roLrq6ueOyxxxAaGgqDwYBdu3bh559/xoYNGzBs2DCMHz8ed9xxh3GeRqNBmzZtrBg5ERERETUH6enpKCgohIuLO+zs7ABc/Q1WotZHoKKiAiUlhfDwcEdAQMBVH5ErIoiIiIioxZgxYwYkScKyZctMav6HhIRg/PjxxtdOTk7w9va2RohERERE1EwpioLCwuokhIuLW90TiK5htrbVK4ALCwvh6+t71WWa5IYIioiIiIiosRUWFmLnzp245557ajQeBgBXV1crREVERERELUVVVRWEwF8rIYioLnZ2dhACDdJPhYkIIiIiImoRkpOTIYRA586d6xz7/vvvIzo62vjz/fffN0GERERERNQysBwTkXka7s8KSzMRERERUYtgSWuzKVOmYNy4ccbXHh4ejRESERERERERmYErIoiIiIioRQgMDIQkSUhISKhzrIeHBwIDA40/LNtERERERM1Rv3498fXX8yyeV1hYgEmTJuLGG2/A2rVrEBt7DPfee2cjRFg/9b2u1u7hh6fi4YenWjsMq2AigoiIiIhaBHd3dwwaNAhLlixBeXl5jf3FxcVWiIqIiIiIWovff/8N/fr1NP4MGdIPEybcivffn4O8vDxrh2diy5bNcHBwwLhxt+Pjj9/HQw9Nwc0332rt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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "eUPcCULCG7Lw"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}